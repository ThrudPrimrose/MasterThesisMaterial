Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36026 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15251 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 669632 :_(
Gemmforge GFLOPs/s: 1529.02
Operational intensity: 2.20041
91.4217 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32717 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15888 ms
cuTensor Tensor Contraction took: 23.711 ms
Results do not match, problem first at offset 1682960 :_(
Gemmforge GFLOPs/s: 1540.71
Operational intensity: 2.20041
92.1208 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32672 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15754 ms
cuTensor Tensor Contraction took: 23.7076 ms
Results do not match, problem first at offset 1781136 :_(
Gemmforge GFLOPs/s: 1540.87
Operational intensity: 2.20041
92.1303 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32307 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15366 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1642784 :_(
Gemmforge GFLOPs/s: 1542.17
Operational intensity: 2.20041
92.2081 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35763 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15741 ms
cuTensor Tensor Contraction took: 23.7085 ms
Results do not match, problem first at offset 357120 :_(
Gemmforge GFLOPs/s: 1529.94
Operational intensity: 2.20041
91.4768 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.8433 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15245 ms
cuTensor Tensor Contraction took: 23.7046 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1376.52
Operational intensity: 2.20041
82.3039 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35702 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15568 ms
cuTensor Tensor Contraction took: 23.7078 ms
Results do not match, problem first at offset 915152 :_(
Gemmforge GFLOPs/s: 1530.15
Operational intensity: 2.20041
91.4896 % of roof w. respect to operational intensity achieved with Gemmforge
16.814 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3705 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1496 ms
cuTensor Tensor Contraction took: 23.7017 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1525.44
Operational intensity: 2.20041
91.2076 % of roof w. respect to operational intensity achieved with Gemmforge
16.8183 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3248 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15712 ms
cuTensor Tensor Contraction took: 23.7082 ms
Results do not match, problem first at offset 709808 :_(
Gemmforge GFLOPs/s: 1541.55
Operational intensity: 2.20041
92.1712 % of roof w. respect to operational intensity achieved with Gemmforge
16.8137 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37136 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15501 ms
cuTensor Tensor Contraction took: 23.7071 ms
Results do not match, problem first at offset 343728 :_(
Gemmforge GFLOPs/s: 1525.14
Operational intensity: 2.20041
91.1895 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32605 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15869 ms
cuTensor Tensor Contraction took: 23.7108 ms
Results do not match, problem first at offset 2624864 :_(
Gemmforge GFLOPs/s: 1541.11
Operational intensity: 2.20041
92.1447 % of roof w. respect to operational intensity achieved with Gemmforge
16.8118 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32992 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15309 ms
cuTensor Tensor Contraction took: 23.7052 ms
Results do not match, problem first at offset 1057968 :_(
Gemmforge GFLOPs/s: 1539.73
Operational intensity: 2.20041
92.0623 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32634 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15734 ms
cuTensor Tensor Contraction took: 23.7095 ms
Results do not match, problem first at offset 1830272 :_(
Gemmforge GFLOPs/s: 1541.01
Operational intensity: 2.20041
92.1385 % of roof w. respect to operational intensity achieved with Gemmforge
16.8128 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32374 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15552 ms
cuTensor Tensor Contraction took: 23.7076 ms
Results do not match, problem first at offset 1450800 :_(
Gemmforge GFLOPs/s: 1541.93
Operational intensity: 2.20041
92.1938 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77142 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15402 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 1544576 :_(
Gemmforge GFLOPs/s: 1397.26
Operational intensity: 2.20041
83.5437 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32714 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15178 ms
cuTensor Tensor Contraction took: 23.7029 ms
Results do not match, problem first at offset 1129392 :_(
Gemmforge GFLOPs/s: 1540.72
Operational intensity: 2.20041
92.1215 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32822 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15293 ms
cuTensor Tensor Contraction took: 23.704 ms
Results do not match, problem first at offset 1901664 :_(
Gemmforge GFLOPs/s: 1540.34
Operational intensity: 2.20041
92.0983 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32931 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15901 ms
cuTensor Tensor Contraction took: 23.7111 ms
Results do not match, problem first at offset 995504 :_(
Gemmforge GFLOPs/s: 1539.95
Operational intensity: 2.20041
92.0752 % of roof w. respect to operational intensity achieved with Gemmforge
16.8116 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49395 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15462 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 1848096 :_(
Gemmforge GFLOPs/s: 1483.53
Operational intensity: 2.20041
88.7019 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32701 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1513 ms
cuTensor Tensor Contraction took: 23.7034 ms
Results do not match, problem first at offset 620528 :_(
Gemmforge GFLOPs/s: 1540.77
Operational intensity: 2.20041
92.1242 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3287 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15338 ms
cuTensor Tensor Contraction took: 23.7055 ms
Results do not match, problem first at offset 1254416 :_(
Gemmforge GFLOPs/s: 1540.16
Operational intensity: 2.20041
92.0881 % of roof w. respect to operational intensity achieved with Gemmforge
16.8156 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.39165 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1553 ms
cuTensor Tensor Contraction took: 23.7074 ms
Results do not match, problem first at offset 1955264 :_(
Gemmforge GFLOPs/s: 1236.53
Operational intensity: 2.20041
73.9333 % of roof w. respect to operational intensity achieved with Gemmforge
16.8142 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.44845 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15414 ms
cuTensor Tensor Contraction took: 23.7052 ms
Results do not match, problem first at offset 674064 :_(
Gemmforge GFLOPs/s: 1498.71
Operational intensity: 2.20041
89.6093 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32602 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15485 ms
cuTensor Tensor Contraction took: 23.706 ms
Results do not match, problem first at offset 861584 :_(
Gemmforge GFLOPs/s: 1541.12
Operational intensity: 2.20041
92.1453 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33261 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15206 ms
cuTensor Tensor Contraction took: 23.7042 ms
Results do not match, problem first at offset 1089216 :_(
Gemmforge GFLOPs/s: 1538.78
Operational intensity: 2.20041
92.0051 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32566 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15267 ms
cuTensor Tensor Contraction took: 23.7038 ms
Results do not match, problem first at offset 991040 :_(
Gemmforge GFLOPs/s: 1541.25
Operational intensity: 2.20041
92.1528 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32653 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15302 ms
cuTensor Tensor Contraction took: 23.7041 ms
Results do not match, problem first at offset 1495472 :_(
Gemmforge GFLOPs/s: 1540.94
Operational intensity: 2.20041
92.1344 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42525 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15517 ms
cuTensor Tensor Contraction took: 23.7073 ms
Results do not match, problem first at offset 1535616 :_(
Gemmforge GFLOPs/s: 1506.56
Operational intensity: 2.20041
90.0791 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.62256 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1575 ms
cuTensor Tensor Contraction took: 23.7086 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1442.26
Operational intensity: 2.20041
86.2341 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32816 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15555 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 928512 :_(
Gemmforge GFLOPs/s: 1540.36
Operational intensity: 2.20041
92.0997 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32413 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15318 ms
cuTensor Tensor Contraction took: 23.7043 ms
Results do not match, problem first at offset 1026752 :_(
Gemmforge GFLOPs/s: 1541.79
Operational intensity: 2.20041
92.1856 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35552 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.14976 ms
cuTensor Tensor Contraction took: 23.7019 ms
Results do not match, problem first at offset 1044608 :_(
Gemmforge GFLOPs/s: 1530.68
Operational intensity: 2.20041
91.5212 % of roof w. respect to operational intensity achieved with Gemmforge
16.8182 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77677 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15709 ms
cuTensor Tensor Contraction took: 23.7091 ms
Results do not match, problem first at offset 1401696 :_(
Gemmforge GFLOPs/s: 1395.7
Operational intensity: 2.20041
83.4502 % of roof w. respect to operational intensity achieved with Gemmforge
16.813 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33088 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1536 ms
cuTensor Tensor Contraction took: 23.7057 ms
Results do not match, problem first at offset 1450832 :_(
Gemmforge GFLOPs/s: 1539.39
Operational intensity: 2.20041
92.0418 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.52003 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15024 ms
cuTensor Tensor Contraction took: 23.7013 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1474.97
Operational intensity: 2.20041
88.1901 % of roof w. respect to operational intensity achieved with Gemmforge
16.8185 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32717 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15562 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 1772240 :_(
Gemmforge GFLOPs/s: 1540.71
Operational intensity: 2.20041
92.1208 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.38192 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15277 ms
cuTensor Tensor Contraction took: 23.7039 ms
Results do not match, problem first at offset 633920 :_(
Gemmforge GFLOPs/s: 1521.46
Operational intensity: 2.20041
90.9698 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.4345 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16784 ms
cuTensor Tensor Contraction took: 23.72 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1503.42
Operational intensity: 2.20041
89.8912 % of roof w. respect to operational intensity achieved with Gemmforge
16.8053 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32419 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16051 ms
cuTensor Tensor Contraction took: 23.7116 ms
Results do not match, problem first at offset 910688 :_(
Gemmforge GFLOPs/s: 1541.77
Operational intensity: 2.20041
92.1842 % of roof w. respect to operational intensity achieved with Gemmforge
16.8113 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32717 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15539 ms
cuTensor Tensor Contraction took: 23.7065 ms
Results do not match, problem first at offset 1138320 :_(
Gemmforge GFLOPs/s: 1540.71
Operational intensity: 2.20041
92.1208 % of roof w. respect to operational intensity achieved with Gemmforge
16.8149 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34589 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15514 ms
cuTensor Tensor Contraction took: 23.7073 ms
Results do not match, problem first at offset 790160 :_(
Gemmforge GFLOPs/s: 1534.07
Operational intensity: 2.20041
91.724 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78912 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15427 ms
cuTensor Tensor Contraction took: 23.7054 ms
Results do not match, problem first at offset 915120 :_(
Gemmforge GFLOPs/s: 1392.1
Operational intensity: 2.20041
83.235 % of roof w. respect to operational intensity achieved with Gemmforge
16.8157 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3384 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15293 ms
cuTensor Tensor Contraction took: 23.706 ms
Results do not match, problem first at offset 651776 :_(
Gemmforge GFLOPs/s: 1536.72
Operational intensity: 2.20041
91.8823 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.51731 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15066 ms
cuTensor Tensor Contraction took: 23.7028 ms
Results do not match, problem first at offset 383904 :_(
Gemmforge GFLOPs/s: 1475.86
Operational intensity: 2.20041
88.2432 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49418 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15574 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 1781168 :_(
Gemmforge GFLOPs/s: 1483.46
Operational intensity: 2.20041
88.6975 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34666 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15974 ms
cuTensor Tensor Contraction took: 23.7119 ms
Results do not match, problem first at offset 941936 :_(
Gemmforge GFLOPs/s: 1533.8
Operational intensity: 2.20041
91.7078 % of roof w. respect to operational intensity achieved with Gemmforge
16.8111 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33584 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15437 ms
cuTensor Tensor Contraction took: 23.7065 ms
Results do not match, problem first at offset 1870416 :_(
Gemmforge GFLOPs/s: 1537.63
Operational intensity: 2.20041
91.9366 % of roof w. respect to operational intensity achieved with Gemmforge
16.8149 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78499 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15494 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 1540112 :_(
Gemmforge GFLOPs/s: 1393.3
Operational intensity: 2.20041
83.3068 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32384 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15738 ms
cuTensor Tensor Contraction took: 23.7105 ms
Results do not match, problem first at offset 1598144 :_(
Gemmforge GFLOPs/s: 1541.9
Operational intensity: 2.20041
92.1917 % of roof w. respect to operational intensity achieved with Gemmforge
16.812 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32931 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1512 ms
cuTensor Tensor Contraction took: 23.7023 ms
Results do not match, problem first at offset 1066928 :_(
Gemmforge GFLOPs/s: 1539.95
Operational intensity: 2.20041
92.0752 % of roof w. respect to operational intensity achieved with Gemmforge
16.8179 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36765 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15206 ms
cuTensor Tensor Contraction took: 23.7042 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1526.43
Operational intensity: 2.20041
91.267 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32541 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15658 ms
cuTensor Tensor Contraction took: 23.7077 ms
Results do not match, problem first at offset 1584720 :_(
Gemmforge GFLOPs/s: 1541.34
Operational intensity: 2.20041
92.1583 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43299 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15091 ms
cuTensor Tensor Contraction took: 23.702 ms
Results do not match, problem first at offset 687488 :_(
Gemmforge GFLOPs/s: 1503.93
Operational intensity: 2.20041
89.9217 % of roof w. respect to operational intensity achieved with Gemmforge
16.8181 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35459 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15616 ms
cuTensor Tensor Contraction took: 23.7083 ms
Results do not match, problem first at offset 290160 :_(
Gemmforge GFLOPs/s: 1531.01
Operational intensity: 2.20041
91.5407 % of roof w. respect to operational intensity achieved with Gemmforge
16.8136 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.65894 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.17475 ms
cuTensor Tensor Contraction took: 23.7269 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1430.99
Operational intensity: 2.20041
85.5606 % of roof w. respect to operational intensity achieved with Gemmforge
16.8004 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33789 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15939 ms
cuTensor Tensor Contraction took: 23.7115 ms
Results do not match, problem first at offset 1883840 :_(
Gemmforge GFLOPs/s: 1536.9
Operational intensity: 2.20041
91.8932 % of roof w. respect to operational intensity achieved with Gemmforge
16.8113 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32899 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1527 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1080320 :_(
Gemmforge GFLOPs/s: 1540.06
Operational intensity: 2.20041
92.082 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7681 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15264 ms
cuTensor Tensor Contraction took: 23.7037 ms
Results do not match, problem first at offset 674064 :_(
Gemmforge GFLOPs/s: 1398.23
Operational intensity: 2.20041
83.602 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48662 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1536 ms
cuTensor Tensor Contraction took: 23.7047 ms
Results do not match, problem first at offset 1651712 :_(
Gemmforge GFLOPs/s: 1485.95
Operational intensity: 2.20041
88.8468 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.80243 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15424 ms
cuTensor Tensor Contraction took: 23.7064 ms
Results do not match, problem first at offset 1540112 :_(
Gemmforge GFLOPs/s: 1388.24
Operational intensity: 2.20041
83.0042 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32477 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15648 ms
cuTensor Tensor Contraction took: 23.7086 ms
Results do not match, problem first at offset 1696352 :_(
Gemmforge GFLOPs/s: 1541.57
Operational intensity: 2.20041
92.1719 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37674 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15069 ms
cuTensor Tensor Contraction took: 23.7037 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1523.26
Operational intensity: 2.20041
91.0775 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.80397 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15373 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1387.79
Operational intensity: 2.20041
82.9777 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32544 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5512 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15462 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 1276736 :_(
Gemmforge GFLOPs/s: 1541.33
Operational intensity: 2.20041
92.1576 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78829 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15456 ms
cuTensor Tensor Contraction took: 23.7057 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1392.34
Operational intensity: 2.20041
83.2494 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.72614 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15507 ms
cuTensor Tensor Contraction took: 23.7072 ms
Results do not match, problem first at offset 1522256 :_(
Gemmforge GFLOPs/s: 1410.65
Operational intensity: 2.20041
84.3441 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32778 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1527 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1830272 :_(
Gemmforge GFLOPs/s: 1540.49
Operational intensity: 2.20041
92.1079 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77238 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15216 ms
cuTensor Tensor Contraction took: 23.7033 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1396.98
Operational intensity: 2.20041
83.5269 % of roof w. respect to operational intensity achieved with Gemmforge
16.8172 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33808 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1528 ms
cuTensor Tensor Contraction took: 23.7039 ms
Results do not match, problem first at offset 928512 :_(
Gemmforge GFLOPs/s: 1536.84
Operational intensity: 2.20041
91.8891 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.40966 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15846 ms
cuTensor Tensor Contraction took: 23.7106 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1511.89
Operational intensity: 2.20041
90.3974 % of roof w. respect to operational intensity achieved with Gemmforge
16.812 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42957 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15139 ms
cuTensor Tensor Contraction took: 23.7035 ms
Results do not match, problem first at offset 611568 :_(
Gemmforge GFLOPs/s: 1505.09
Operational intensity: 2.20041
89.9912 % of roof w. respect to operational intensity achieved with Gemmforge
16.817 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49213 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15254 ms
cuTensor Tensor Contraction took: 23.7047 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1484.13
Operational intensity: 2.20041
88.7379 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35139 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1527 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 419648 :_(
Gemmforge GFLOPs/s: 1532.13
Operational intensity: 2.20041
91.608 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35235 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1528 ms
cuTensor Tensor Contraction took: 23.7049 ms
Results do not match, problem first at offset 857120 :_(
Gemmforge GFLOPs/s: 1531.8
Operational intensity: 2.20041
91.5878 % of roof w. respect to operational intensity achieved with Gemmforge
16.816 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32755 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15088 ms
cuTensor Tensor Contraction took: 23.704 ms
Results do not match, problem first at offset 1540080 :_(
Gemmforge GFLOPs/s: 1540.57
Operational intensity: 2.20041
92.1126 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.4936 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1568 ms
cuTensor Tensor Contraction took: 23.7089 ms
Results do not match, problem first at offset 1821344 :_(
Gemmforge GFLOPs/s: 1483.65
Operational intensity: 2.20041
88.7089 % of roof w. respect to operational intensity achieved with Gemmforge
16.8132 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.82947 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15475 ms
cuTensor Tensor Contraction took: 23.7069 ms
Results do not match, problem first at offset 1584720 :_(
Gemmforge GFLOPs/s: 1380.46
Operational intensity: 2.20041
82.5395 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49818 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15805 ms
cuTensor Tensor Contraction took: 23.7102 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1482.14
Operational intensity: 2.20041
88.6186 % of roof w. respect to operational intensity achieved with Gemmforge
16.8123 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32566 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15091 ms
cuTensor Tensor Contraction took: 23.703 ms
Results do not match, problem first at offset 941936 :_(
Gemmforge GFLOPs/s: 1541.25
Operational intensity: 2.20041
92.1528 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.47315 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15363 ms
cuTensor Tensor Contraction took: 23.7047 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1490.43
Operational intensity: 2.20041
89.1144 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35395 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15558 ms
cuTensor Tensor Contraction took: 23.7077 ms
Results do not match, problem first at offset 1026752 :_(
Gemmforge GFLOPs/s: 1531.23
Operational intensity: 2.20041
91.5541 % of roof w. respect to operational intensity achieved with Gemmforge
16.814 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.66851 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15552 ms
cuTensor Tensor Contraction took: 23.7066 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1428.06
Operational intensity: 2.20041
85.3853 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32845 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15674 ms
cuTensor Tensor Contraction took: 23.7078 ms
Results do not match, problem first at offset 1008896 :_(
Gemmforge GFLOPs/s: 1540.26
Operational intensity: 2.20041
92.0936 % of roof w. respect to operational intensity achieved with Gemmforge
16.8139 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34861 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15462 ms
cuTensor Tensor Contraction took: 23.7057 ms
Results do not match, problem first at offset 1013360 :_(
Gemmforge GFLOPs/s: 1533.12
Operational intensity: 2.20041
91.6666 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32902 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16858 ms
cuTensor Tensor Contraction took: 23.7217 ms
Results do not match, problem first at offset 1790096 :_(
Gemmforge GFLOPs/s: 1540.05
Operational intensity: 2.20041
92.0813 % of roof w. respect to operational intensity achieved with Gemmforge
16.8041 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.45712 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15357 ms
cuTensor Tensor Contraction took: 23.7057 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1495.79
Operational intensity: 2.20041
89.4349 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7545 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15568 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 1540112 :_(
Gemmforge GFLOPs/s: 1402.23
Operational intensity: 2.20041
83.8411 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3233 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1552 ms
cuTensor Tensor Contraction took: 23.7063 ms
Results do not match, problem first at offset 1022288 :_(
Gemmforge GFLOPs/s: 1542.09
Operational intensity: 2.20041
92.2033 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33754 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15453 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 955296 :_(
Gemmforge GFLOPs/s: 1537.03
Operational intensity: 2.20041
91.9006 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.6432 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15814 ms
cuTensor Tensor Contraction took: 23.7092 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1435.85
Operational intensity: 2.20041
85.8508 % of roof w. respect to operational intensity achieved with Gemmforge
16.8129 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.44928 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15107 ms
cuTensor Tensor Contraction took: 23.7022 ms
Results do not match, problem first at offset 133920 :_(
Gemmforge GFLOPs/s: 1498.43
Operational intensity: 2.20041
89.5925 % of roof w. respect to operational intensity achieved with Gemmforge
16.818 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42877 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15402 ms
cuTensor Tensor Contraction took: 23.7061 ms
Results do not match, problem first at offset 642848 :_(
Gemmforge GFLOPs/s: 1505.37
Operational intensity: 2.20041
90.0075 % of roof w. respect to operational intensity achieved with Gemmforge
16.8151 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.32253 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15626 ms
cuTensor Tensor Contraction took: 23.7084 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1252.58
Operational intensity: 2.20041
74.8934 % of roof w. respect to operational intensity achieved with Gemmforge
16.8136 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.71574 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15395 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 1540112 :_(
Gemmforge GFLOPs/s: 1413.76
Operational intensity: 2.20041
84.5301 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33248 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15635 ms
cuTensor Tensor Contraction took: 23.7085 ms
Results do not match, problem first at offset 1843632 :_(
Gemmforge GFLOPs/s: 1538.82
Operational intensity: 2.20041
92.0079 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.76301 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15882 ms
cuTensor Tensor Contraction took: 23.7109 ms
Results do not match, problem first at offset 991008 :_(
Gemmforge GFLOPs/s: 1399.73
Operational intensity: 2.20041
83.6913 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32752 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15728 ms
cuTensor Tensor Contraction took: 23.7094 ms
Results do not match, problem first at offset 1504400 :_(
Gemmforge GFLOPs/s: 1540.59
Operational intensity: 2.20041
92.1133 % of roof w. respect to operational intensity achieved with Gemmforge
16.8128 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33312 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15674 ms
cuTensor Tensor Contraction took: 23.7089 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1538.6
Operational intensity: 2.20041
91.9943 % of roof w. respect to operational intensity achieved with Gemmforge
16.8132 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.70278 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15536 ms
cuTensor Tensor Contraction took: 23.7075 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1417.65
Operational intensity: 2.20041
84.763 % of roof w. respect to operational intensity achieved with Gemmforge
16.8142 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.99149 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15171 ms
cuTensor Tensor Contraction took: 23.7028 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1335.66
Operational intensity: 2.20041
79.8604 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.82541 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15638 ms
cuTensor Tensor Contraction took: 23.7065 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1381.63
Operational intensity: 2.20041
82.609 % of roof w. respect to operational intensity achieved with Gemmforge
16.8149 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34746 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15747 ms
cuTensor Tensor Contraction took: 23.7096 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1533.52
Operational intensity: 2.20041
91.6909 % of roof w. respect to operational intensity achieved with Gemmforge
16.8127 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.81674 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15286 ms
cuTensor Tensor Contraction took: 23.704 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1384.12
Operational intensity: 2.20041
82.7577 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.5432 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15827 ms
cuTensor Tensor Contraction took: 23.7113 ms
Results do not match, problem first at offset 928512 :_(
Gemmforge GFLOPs/s: 1467.45
Operational intensity: 2.20041
87.7404 % of roof w. respect to operational intensity achieved with Gemmforge
16.8115 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3271 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15744 ms
cuTensor Tensor Contraction took: 23.7096 ms
Results do not match, problem first at offset 986544 :_(
Gemmforge GFLOPs/s: 1540.73
Operational intensity: 2.20041
92.1222 % of roof w. respect to operational intensity achieved with Gemmforge
16.8127 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.38419 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1567 ms
cuTensor Tensor Contraction took: 23.7078 ms
Results do not match, problem first at offset 258944 :_(
Gemmforge GFLOPs/s: 1520.67
Operational intensity: 2.20041
90.9226 % of roof w. respect to operational intensity achieved with Gemmforge
16.814 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33523 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1559 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 977616 :_(
Gemmforge GFLOPs/s: 1537.85
Operational intensity: 2.20041
91.9495 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32909 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1583 ms
cuTensor Tensor Contraction took: 23.7104 ms
Results do not match, problem first at offset 1544576 :_(
Gemmforge GFLOPs/s: 1540.03
Operational intensity: 2.20041
92.0799 % of roof w. respect to operational intensity achieved with Gemmforge
16.8121 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32614 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15523 ms
cuTensor Tensor Contraction took: 23.7074 ms
Results do not match, problem first at offset 1616000 :_(
Gemmforge GFLOPs/s: 1541.08
Operational intensity: 2.20041
92.1426 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.50493 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15197 ms
cuTensor Tensor Contraction took: 23.7031 ms
Results do not match, problem first at offset 910688 :_(
Gemmforge GFLOPs/s: 1479.92
Operational intensity: 2.20041
88.4858 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3633 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15437 ms
cuTensor Tensor Contraction took: 23.7055 ms
Results do not match, problem first at offset 669600 :_(
Gemmforge GFLOPs/s: 1527.95
Operational intensity: 2.20041
91.358 % of roof w. respect to operational intensity achieved with Gemmforge
16.8156 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32902 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15642 ms
cuTensor Tensor Contraction took: 23.7075 ms
Results do not match, problem first at offset 1772240 :_(
Gemmforge GFLOPs/s: 1540.05
Operational intensity: 2.20041
92.0813 % of roof w. respect to operational intensity achieved with Gemmforge
16.8142 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43152 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15258 ms
cuTensor Tensor Contraction took: 23.7047 ms
Results do not match, problem first at offset 1080320 :_(
Gemmforge GFLOPs/s: 1504.43
Operational intensity: 2.20041
89.9516 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.75827 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15635 ms
cuTensor Tensor Contraction took: 23.7085 ms
Results do not match, problem first at offset 964224 :_(
Gemmforge GFLOPs/s: 1401.12
Operational intensity: 2.20041
83.7746 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33408 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15379 ms
cuTensor Tensor Contraction took: 23.7049 ms
Results do not match, problem first at offset 857088 :_(
Gemmforge GFLOPs/s: 1538.25
Operational intensity: 2.20041
91.9739 % of roof w. respect to operational intensity achieved with Gemmforge
16.816 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43162 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15094 ms
cuTensor Tensor Contraction took: 23.7031 ms
Results do not match, problem first at offset 1593648 :_(
Gemmforge GFLOPs/s: 1504.4
Operational intensity: 2.20041
89.9496 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-1-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35555 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15456 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 915120 :_(
Gemmforge GFLOPs/s: 1530.67
Operational intensity: 2.20041
91.5205 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-4-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33968 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15126 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 1656176 :_(
Gemmforge GFLOPs/s: 1536.27
Operational intensity: 2.20041
91.8552 % of roof w. respect to operational intensity achieved with Gemmforge
16.8164 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32589 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15418 ms
cuTensor Tensor Contraction took: 23.7063 ms
Results do not match, problem first at offset 977648 :_(
Gemmforge GFLOPs/s: 1541.17
Operational intensity: 2.20041
92.1481 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35008 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15299 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 691952 :_(
Gemmforge GFLOPs/s: 1532.6
Operational intensity: 2.20041
91.6356 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35213 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1521 ms
cuTensor Tensor Contraction took: 23.7052 ms
Results do not match, problem first at offset 816944 :_(
Gemmforge GFLOPs/s: 1531.88
Operational intensity: 2.20041
91.5925 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.85027 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15885 ms
cuTensor Tensor Contraction took: 23.711 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1374.54
Operational intensity: 2.20041
82.1855 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48893 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15242 ms
cuTensor Tensor Contraction took: 23.7045 ms
Results do not match, problem first at offset 1508864 :_(
Gemmforge GFLOPs/s: 1485.19
Operational intensity: 2.20041
88.8012 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-1-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7783 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15757 ms
cuTensor Tensor Contraction took: 23.7087 ms
Results do not match, problem first at offset 285696 :_(
Gemmforge GFLOPs/s: 1395.25
Operational intensity: 2.20041
83.4234 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.88512 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15549 ms
cuTensor Tensor Contraction took: 23.7066 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1364.74
Operational intensity: 2.20041
81.5993 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-8-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37072 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15472 ms
cuTensor Tensor Contraction took: 23.7068 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1525.36
Operational intensity: 2.20041
91.2029 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33274 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15331 ms
cuTensor Tensor Contraction took: 23.7054 ms
Results do not match, problem first at offset 1383840 :_(
Gemmforge GFLOPs/s: 1538.73
Operational intensity: 2.20041
92.0024 % of roof w. respect to operational intensity achieved with Gemmforge
16.8156 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32781 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15408 ms
cuTensor Tensor Contraction took: 23.7052 ms
Results do not match, problem first at offset 968688 :_(
Gemmforge GFLOPs/s: 1540.48
Operational intensity: 2.20041
92.1072 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3256 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15072 ms
cuTensor Tensor Contraction took: 23.7018 ms
Results do not match, problem first at offset 3352496 :_(
Gemmforge GFLOPs/s: 1541.27
Operational intensity: 2.20041
92.1542 % of roof w. respect to operational intensity achieved with Gemmforge
16.8182 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-4-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3969 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15552 ms
cuTensor Tensor Contraction took: 23.7066 ms
Results do not match, problem first at offset 839264 :_(
Gemmforge GFLOPs/s: 1516.28
Operational intensity: 2.20041
90.6599 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-16-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35094 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15091 ms
cuTensor Tensor Contraction took: 23.703 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1532.29
Operational intensity: 2.20041
91.6174 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32608 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15248 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 924080 :_(
Gemmforge GFLOPs/s: 1541.1
Operational intensity: 2.20041
92.144 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32835 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15555 ms
cuTensor Tensor Contraction took: 23.7087 ms
Results do not match, problem first at offset 1093712 :_(
Gemmforge GFLOPs/s: 1540.29
Operational intensity: 2.20041
92.0956 % of roof w. respect to operational intensity achieved with Gemmforge
16.8133 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-16-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77334 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15405 ms
cuTensor Tensor Contraction took: 23.7052 ms
Results do not match, problem first at offset 1562432 :_(
Gemmforge GFLOPs/s: 1396.7
Operational intensity: 2.20041
83.5101 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 8-16-8
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32752 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15635 ms
cuTensor Tensor Contraction took: 23.7085 ms
Results do not match, problem first at offset 1584720 :_(
Gemmforge GFLOPs/s: 1540.59
Operational intensity: 2.20041
92.1133 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32637 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15712 ms
cuTensor Tensor Contraction took: 23.7082 ms
Results do not match, problem first at offset 1031184 :_(
Gemmforge GFLOPs/s: 1541
Operational intensity: 2.20041
92.1378 % of roof w. respect to operational intensity achieved with Gemmforge
16.8137 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 16-1-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34979 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15482 ms
cuTensor Tensor Contraction took: 23.7069 ms
Results do not match, problem first at offset 491040 :_(
Gemmforge GFLOPs/s: 1532.7
Operational intensity: 2.20041
91.6417 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-1-16
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42096 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15251 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 915152 :_(
Gemmforge GFLOPs/s: 1508.02
Operational intensity: 2.20041
90.1664 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-8-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.75226 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15581 ms
cuTensor Tensor Contraction took: 23.7079 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1402.9
Operational intensity: 2.20041
83.8806 % of roof w. respect to operational intensity achieved with Gemmforge
16.8139 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 1-4-1
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7201 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15533 ms
cuTensor Tensor Contraction took: 23.7085 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1412.45
Operational intensity: 2.20041
84.4521 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-8-24
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3255 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15494 ms
cuTensor Tensor Contraction took: 23.7071 ms
Results do not match, problem first at offset 1696320 :_(
Gemmforge GFLOPs/s: 1541.3
Operational intensity: 2.20041
92.1563 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 24-4-4
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32998 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.14989 ms
cuTensor Tensor Contraction took: 23.701 ms
Results do not match, problem first at offset 1013360 :_(
Gemmforge GFLOPs/s: 1539.71
Operational intensity: 2.20041
92.0609 % of roof w. respect to operational intensity achieved with Gemmforge
16.8188 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 48-16-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.78058 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15104 ms
cuTensor Tensor Contraction took: 23.7032 ms
Results do not match, problem first at offset 910688 :_(
Gemmforge GFLOPs/s: 1153.33
Operational intensity: 2.20041
68.9589 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Unroll parameters: 4-8-48
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49354 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15488 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 1834736 :_(
Gemmforge GFLOPs/s: 1483.67
Operational intensity: 2.20041
88.7101 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
