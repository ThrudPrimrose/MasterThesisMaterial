Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35974 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.14899 ms
cuTensor Tensor Contraction took: 23.7011 ms
Results do not match, problem first at offset 955296 :_(
Gemmforge GFLOPs/s: 1529.2
Operational intensity: 2.20041
91.4325 % of roof w. respect to operational intensity achieved with Gemmforge
16.8187 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32742 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15149 ms
cuTensor Tensor Contraction took: 23.7036 ms
Results do not match, problem first at offset 1089216 :_(
Gemmforge GFLOPs/s: 1540.62
Operational intensity: 2.20041
92.1154 % of roof w. respect to operational intensity achieved with Gemmforge
16.8169 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32739 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15421 ms
cuTensor Tensor Contraction took: 23.7063 ms
Results do not match, problem first at offset 959760 :_(
Gemmforge GFLOPs/s: 1540.63
Operational intensity: 2.20041
92.116 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32861 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16051 ms
cuTensor Tensor Contraction took: 23.7137 ms
Results do not match, problem first at offset 1080288 :_(
Gemmforge GFLOPs/s: 1540.2
Operational intensity: 2.20041
92.0902 % of roof w. respect to operational intensity achieved with Gemmforge
16.8098 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3561 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15251 ms
cuTensor Tensor Contraction took: 23.7036 ms
Results do not match, problem first at offset 611600 :_(
Gemmforge GFLOPs/s: 1530.48
Operational intensity: 2.20041
91.5091 % of roof w. respect to operational intensity achieved with Gemmforge
16.8169 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.8423 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15405 ms
cuTensor Tensor Contraction took: 23.7052 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1376.81
Operational intensity: 2.20041
82.3208 % of roof w. respect to operational intensity achieved with Gemmforge
16.8158 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35328 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15382 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 276800 :_(
Gemmforge GFLOPs/s: 1531.47
Operational intensity: 2.20041
91.5682 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37091 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15222 ms
cuTensor Tensor Contraction took: 23.7054 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1525.29
Operational intensity: 2.20041
91.1989 % of roof w. respect to operational intensity achieved with Gemmforge
16.8157 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32746 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15555 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 1071392 :_(
Gemmforge GFLOPs/s: 1540.61
Operational intensity: 2.20041
92.1147 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3743 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15453 ms
cuTensor Tensor Contraction took: 23.7056 ms
Results do not match, problem first at offset 633920 :_(
Gemmforge GFLOPs/s: 1524.11
Operational intensity: 2.20041
91.1282 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32998 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15501 ms
cuTensor Tensor Contraction took: 23.7071 ms
Results do not match, problem first at offset 1549008 :_(
Gemmforge GFLOPs/s: 1539.71
Operational intensity: 2.20041
92.0609 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32464 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15888 ms
cuTensor Tensor Contraction took: 23.711 ms
Results do not match, problem first at offset 1071392 :_(
Gemmforge GFLOPs/s: 1541.61
Operational intensity: 2.20041
92.1747 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3265 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15658 ms
cuTensor Tensor Contraction took: 23.7077 ms
Results do not match, problem first at offset 1812384 :_(
Gemmforge GFLOPs/s: 1540.95
Operational intensity: 2.20041
92.1351 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32595 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15203 ms
cuTensor Tensor Contraction took: 23.7042 ms
Results do not match, problem first at offset 1995440 :_(
Gemmforge GFLOPs/s: 1541.14
Operational intensity: 2.20041
92.1467 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78381 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15178 ms
cuTensor Tensor Contraction took: 23.7039 ms
Results do not match, problem first at offset 1557968 :_(
Gemmforge GFLOPs/s: 1393.64
Operational intensity: 2.20041
83.3274 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32822 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15629 ms
cuTensor Tensor Contraction took: 23.7074 ms
Results do not match, problem first at offset 1544576 :_(
Gemmforge GFLOPs/s: 1540.34
Operational intensity: 2.20041
92.0983 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32909 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15232 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 1950768 :_(
Gemmforge GFLOPs/s: 1540.03
Operational intensity: 2.20041
92.0799 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33104 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15606 ms
cuTensor Tensor Contraction took: 23.7081 ms
Results do not match, problem first at offset 1482080 :_(
Gemmforge GFLOPs/s: 1539.33
Operational intensity: 2.20041
92.0385 % of roof w. respect to operational intensity achieved with Gemmforge
16.8138 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48909 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15379 ms
cuTensor Tensor Contraction took: 23.7049 ms
Results do not match, problem first at offset 1316880 :_(
Gemmforge GFLOPs/s: 1485.14
Operational intensity: 2.20041
88.798 % of roof w. respect to operational intensity achieved with Gemmforge
16.816 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3231 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15299 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 1696352 :_(
Gemmforge GFLOPs/s: 1542.16
Operational intensity: 2.20041
92.2074 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33011 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15683 ms
cuTensor Tensor Contraction took: 23.709 ms
Results do not match, problem first at offset 1669536 :_(
Gemmforge GFLOPs/s: 1539.66
Operational intensity: 2.20041
92.0582 % of roof w. respect to operational intensity achieved with Gemmforge
16.8131 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.39293 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1544 ms
cuTensor Tensor Contraction took: 23.7076 ms
Results do not match, problem first at offset 2138288 :_(
Gemmforge GFLOPs/s: 1236.23
Operational intensity: 2.20041
73.9157 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.44198 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1505 ms
cuTensor Tensor Contraction took: 23.7026 ms
Results do not match, problem first at offset 611600 :_(
Gemmforge GFLOPs/s: 1500.89
Operational intensity: 2.20041
89.7397 % of roof w. respect to operational intensity achieved with Gemmforge
16.8176 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3257 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1535 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 910656 :_(
Gemmforge GFLOPs/s: 1541.24
Operational intensity: 2.20041
92.1522 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33277 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15402 ms
cuTensor Tensor Contraction took: 23.7061 ms
Results do not match, problem first at offset 1080288 :_(
Gemmforge GFLOPs/s: 1538.72
Operational intensity: 2.20041
92.0017 % of roof w. respect to operational intensity achieved with Gemmforge
16.8151 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32534 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1537 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1022288 :_(
Gemmforge GFLOPs/s: 1541.36
Operational intensity: 2.20041
92.1597 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32432 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15398 ms
cuTensor Tensor Contraction took: 23.7071 ms
Results do not match, problem first at offset 1740992 :_(
Gemmforge GFLOPs/s: 1541.73
Operational intensity: 2.20041
92.1815 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42957 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15882 ms
cuTensor Tensor Contraction took: 23.7109 ms
Results do not match, problem first at offset 1526688 :_(
Gemmforge GFLOPs/s: 1505.09
Operational intensity: 2.20041
89.9912 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.62173 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.17267 ms
cuTensor Tensor Contraction took: 23.7238 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1442.52
Operational intensity: 2.20041
86.2496 % of roof w. respect to operational intensity achieved with Gemmforge
16.8026 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32781 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.551 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1527 ms
cuTensor Tensor Contraction took: 23.7037 ms
Results do not match, problem first at offset 1142816 :_(
Gemmforge GFLOPs/s: 1540.48
Operational intensity: 2.20041
92.1072 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32224 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15965 ms
cuTensor Tensor Contraction took: 23.7118 ms
Results do not match, problem first at offset 950864 :_(
Gemmforge GFLOPs/s: 1542.47
Operational intensity: 2.20041
92.2258 % of roof w. respect to operational intensity achieved with Gemmforge
16.8111 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36282 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15475 ms
cuTensor Tensor Contraction took: 23.7069 ms
Results do not match, problem first at offset 616064 :_(
Gemmforge GFLOPs/s: 1528.12
Operational intensity: 2.20041
91.3681 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78083 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15616 ms
cuTensor Tensor Contraction took: 23.7073 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1394.51
Operational intensity: 2.20041
83.3793 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33085 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15747 ms
cuTensor Tensor Contraction took: 23.7086 ms
Results do not match, problem first at offset 941936 :_(
Gemmforge GFLOPs/s: 1539.4
Operational intensity: 2.20041
92.0425 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.52253 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15126 ms
cuTensor Tensor Contraction took: 23.7024 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1474.16
Operational intensity: 2.20041
88.1415 % of roof w. respect to operational intensity achieved with Gemmforge
16.8178 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3248 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5512 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15219 ms
cuTensor Tensor Contraction took: 23.7034 ms
Results do not match, problem first at offset 928544 :_(
Gemmforge GFLOPs/s: 1541.55
Operational intensity: 2.20041
92.1712 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.38067 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15485 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 620496 :_(
Gemmforge GFLOPs/s: 1521.89
Operational intensity: 2.20041
90.9957 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43635 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15427 ms
cuTensor Tensor Contraction took: 23.7064 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1502.79
Operational intensity: 2.20041
89.8536 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3264 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15683 ms
cuTensor Tensor Contraction took: 23.709 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1540.98
Operational intensity: 2.20041
92.1372 % of roof w. respect to operational intensity achieved with Gemmforge
16.8131 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32637 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15286 ms
cuTensor Tensor Contraction took: 23.7049 ms
Results do not match, problem first at offset 1508864 :_(
Gemmforge GFLOPs/s: 1541
Operational intensity: 2.20041
92.1378 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3489 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15347 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 941904 :_(
Gemmforge GFLOPs/s: 1533.01
Operational intensity: 2.20041
91.6606 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.784 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15472 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 98240 :_(
Gemmforge GFLOPs/s: 1393.59
Operational intensity: 2.20041
83.324 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33965 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16208 ms
cuTensor Tensor Contraction took: 23.7142 ms
Results do not match, problem first at offset 964224 :_(
Gemmforge GFLOPs/s: 1536.28
Operational intensity: 2.20041
91.8559 % of roof w. respect to operational intensity achieved with Gemmforge
16.8094 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.51542 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15226 ms
cuTensor Tensor Contraction took: 23.7034 ms
Results do not match, problem first at offset 776768 :_(
Gemmforge GFLOPs/s: 1476.48
Operational intensity: 2.20041
88.2801 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49334 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15213 ms
cuTensor Tensor Contraction took: 23.7043 ms
Results do not match, problem first at offset 1611536 :_(
Gemmforge GFLOPs/s: 1483.73
Operational intensity: 2.20041
88.7139 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34614 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1536 ms
cuTensor Tensor Contraction took: 23.7047 ms
Results do not match, problem first at offset 848192 :_(
Gemmforge GFLOPs/s: 1533.98
Operational intensity: 2.20041
91.7186 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33958 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15565 ms
cuTensor Tensor Contraction took: 23.7088 ms
Results do not match, problem first at offset 1682960 :_(
Gemmforge GFLOPs/s: 1536.3
Operational intensity: 2.20041
91.8572 % of roof w. respect to operational intensity achieved with Gemmforge
16.8133 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.79757 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16006 ms
cuTensor Tensor Contraction took: 23.7122 ms
Results do not match, problem first at offset 1535648 :_(
Gemmforge GFLOPs/s: 1389.65
Operational intensity: 2.20041
83.0884 % of roof w. respect to operational intensity achieved with Gemmforge
16.8109 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32794 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15386 ms
cuTensor Tensor Contraction took: 23.706 ms
Results do not match, problem first at offset 950832 :_(
Gemmforge GFLOPs/s: 1540.44
Operational intensity: 2.20041
92.1045 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32659 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15171 ms
cuTensor Tensor Contraction took: 23.7028 ms
Results do not match, problem first at offset 1156208 :_(
Gemmforge GFLOPs/s: 1540.92
Operational intensity: 2.20041
92.1331 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36611 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15587 ms
cuTensor Tensor Contraction took: 23.707 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1526.97
Operational intensity: 2.20041
91.2991 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3264 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15334 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 941904 :_(
Gemmforge GFLOPs/s: 1540.98
Operational intensity: 2.20041
92.1372 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43498 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15334 ms
cuTensor Tensor Contraction took: 23.7055 ms
Results do not match, problem first at offset 1040144 :_(
Gemmforge GFLOPs/s: 1503.26
Operational intensity: 2.20041
89.8815 % of roof w. respect to operational intensity achieved with Gemmforge
16.8156 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3535 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15315 ms
cuTensor Tensor Contraction took: 23.7043 ms
Results do not match, problem first at offset 1008864 :_(
Gemmforge GFLOPs/s: 1531.39
Operational intensity: 2.20041
91.5635 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.66381 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15523 ms
cuTensor Tensor Contraction took: 23.7063 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1429.5
Operational intensity: 2.20041
85.4714 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33722 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15485 ms
cuTensor Tensor Contraction took: 23.708 ms
Results do not match, problem first at offset 1522256 :_(
Gemmforge GFLOPs/s: 1537.14
Operational intensity: 2.20041
91.9074 % of roof w. respect to operational intensity achieved with Gemmforge
16.8138 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32918 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15434 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 924080 :_(
Gemmforge GFLOPs/s: 1539.99
Operational intensity: 2.20041
92.0779 % of roof w. respect to operational intensity achieved with Gemmforge
16.8164 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.76909 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1543 ms
cuTensor Tensor Contraction took: 23.7054 ms
Results do not match, problem first at offset 924048 :_(
Gemmforge GFLOPs/s: 1397.94
Operational intensity: 2.20041
83.5846 % of roof w. respect to operational intensity achieved with Gemmforge
16.8157 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49082 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15677 ms
cuTensor Tensor Contraction took: 23.7089 ms
Results do not match, problem first at offset 1562432 :_(
Gemmforge GFLOPs/s: 1484.57
Operational intensity: 2.20041
88.7639 % of roof w. respect to operational intensity achieved with Gemmforge
16.8132 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.79219 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1529 ms
cuTensor Tensor Contraction took: 23.704 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1391.2
Operational intensity: 2.20041
83.1816 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32998 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15955 ms
cuTensor Tensor Contraction took: 23.7117 ms
Results do not match, problem first at offset 991008 :_(
Gemmforge GFLOPs/s: 1539.71
Operational intensity: 2.20041
92.0609 % of roof w. respect to operational intensity achieved with Gemmforge
16.8112 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.376 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15811 ms
cuTensor Tensor Contraction took: 23.7092 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1523.52
Operational intensity: 2.20041
91.0928 % of roof w. respect to operational intensity achieved with Gemmforge
16.813 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.79606 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15594 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1390.08
Operational intensity: 2.20041
83.1145 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32605 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15651 ms
cuTensor Tensor Contraction took: 23.7086 ms
Results do not match, problem first at offset 986576 :_(
Gemmforge GFLOPs/s: 1541.11
Operational intensity: 2.20041
92.1447 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77965 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15482 ms
cuTensor Tensor Contraction took: 23.7069 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1394.86
Operational intensity: 2.20041
83.3999 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.74874 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15494 ms
cuTensor Tensor Contraction took: 23.7061 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1403.94
Operational intensity: 2.20041
83.9428 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3279 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15498 ms
cuTensor Tensor Contraction took: 23.7061 ms
Results do not match, problem first at offset 999936 :_(
Gemmforge GFLOPs/s: 1540.45
Operational intensity: 2.20041
92.1051 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.72442 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15482 ms
cuTensor Tensor Contraction took: 23.7059 ms
Results do not match, problem first at offset 1522256 :_(
Gemmforge GFLOPs/s: 1411.16
Operational intensity: 2.20041
84.3749 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3376 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15296 ms
cuTensor Tensor Contraction took: 23.7041 ms
Results do not match, problem first at offset 1008896 :_(
Gemmforge GFLOPs/s: 1537.01
Operational intensity: 2.20041
91.8993 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.4057 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1489 ms
cuTensor Tensor Contraction took: 23.701 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1513.25
Operational intensity: 2.20041
90.4788 % of roof w. respect to operational intensity achieved with Gemmforge
16.8188 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43066 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15648 ms
cuTensor Tensor Contraction took: 23.7076 ms
Results do not match, problem first at offset 932976 :_(
Gemmforge GFLOPs/s: 1504.72
Operational intensity: 2.20041
89.9691 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49126 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15418 ms
cuTensor Tensor Contraction took: 23.7063 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1484.42
Operational intensity: 2.20041
88.755 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35037 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15341 ms
cuTensor Tensor Contraction took: 23.7045 ms
Results do not match, problem first at offset 665168 :_(
Gemmforge GFLOPs/s: 1532.49
Operational intensity: 2.20041
91.6295 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35184 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15462 ms
cuTensor Tensor Contraction took: 23.7057 ms
Results do not match, problem first at offset 790160 :_(
Gemmforge GFLOPs/s: 1531.98
Operational intensity: 2.20041
91.5985 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32547 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15434 ms
cuTensor Tensor Contraction took: 23.7075 ms
Results do not match, problem first at offset 1013328 :_(
Gemmforge GFLOPs/s: 1541.32
Operational intensity: 2.20041
92.1569 % of roof w. respect to operational intensity achieved with Gemmforge
16.8142 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48819 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.18368 ms
cuTensor Tensor Contraction took: 23.7358 ms
Results do not match, problem first at offset 1705248 :_(
Gemmforge GFLOPs/s: 1485.43
Operational intensity: 2.20041
88.8158 % of roof w. respect to operational intensity achieved with Gemmforge
16.7941 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.82394 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15926 ms
cuTensor Tensor Contraction took: 23.7114 ms
Results do not match, problem first at offset 1540080 :_(
Gemmforge GFLOPs/s: 1382.05
Operational intensity: 2.20041
82.6342 % of roof w. respect to operational intensity achieved with Gemmforge
16.8114 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.50579 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15469 ms
cuTensor Tensor Contraction took: 23.7048 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1479.63
Operational intensity: 2.20041
88.4688 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3279 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15184 ms
cuTensor Tensor Contraction took: 23.704 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1540.45
Operational intensity: 2.20041
92.1051 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.47312 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1519 ms
cuTensor Tensor Contraction took: 23.703 ms
Results do not match, problem first at offset 34163024 :_(
Gemmforge GFLOPs/s: 1490.44
Operational intensity: 2.20041
89.115 % of roof w. respect to operational intensity achieved with Gemmforge
16.8174 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35581 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1567 ms
cuTensor Tensor Contraction took: 23.7088 ms
Results do not match, problem first at offset 13392 :_(
Gemmforge GFLOPs/s: 1530.58
Operational intensity: 2.20041
91.5151 % of roof w. respect to operational intensity achieved with Gemmforge
16.8132 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.6409 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15478 ms
cuTensor Tensor Contraction took: 23.7069 ms
Results do not match, problem first at offset 1526688 :_(
Gemmforge GFLOPs/s: 1436.56
Operational intensity: 2.20041
85.8934 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32534 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15222 ms
cuTensor Tensor Contraction took: 23.7033 ms
Results do not match, problem first at offset 999968 :_(
Gemmforge GFLOPs/s: 1541.36
Operational intensity: 2.20041
92.1597 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34851 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15462 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 223200 :_(
Gemmforge GFLOPs/s: 1533.15
Operational intensity: 2.20041
91.6686 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32973 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1568 ms
cuTensor Tensor Contraction took: 23.71 ms
Results do not match, problem first at offset 999968 :_(
Gemmforge GFLOPs/s: 1539.8
Operational intensity: 2.20041
92.0663 % of roof w. respect to operational intensity achieved with Gemmforge
16.8124 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.46003 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15037 ms
cuTensor Tensor Contraction took: 23.7025 ms
Results do not match, problem first at offset 1700816 :_(
Gemmforge GFLOPs/s: 1494.81
Operational intensity: 2.20041
89.3765 % of roof w. respect to operational intensity achieved with Gemmforge
16.8177 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.75472 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15926 ms
cuTensor Tensor Contraction took: 23.7104 ms
Results do not match, problem first at offset 1549040 :_(
Gemmforge GFLOPs/s: 1402.17
Operational intensity: 2.20041
83.8372 % of roof w. respect to operational intensity achieved with Gemmforge
16.8121 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32602 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15312 ms
cuTensor Tensor Contraction took: 23.7042 ms
Results do not match, problem first at offset 915152 :_(
Gemmforge GFLOPs/s: 1541.12
Operational intensity: 2.20041
92.1453 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33971 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15117 ms
cuTensor Tensor Contraction took: 23.7023 ms
Results do not match, problem first at offset 1013328 :_(
Gemmforge GFLOPs/s: 1536.26
Operational intensity: 2.20041
91.8545 % of roof w. respect to operational intensity achieved with Gemmforge
16.8179 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.64282 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15363 ms
cuTensor Tensor Contraction took: 23.7047 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1435.96
Operational intensity: 2.20041
85.8579 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.44474 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15283 ms
cuTensor Tensor Contraction took: 23.705 ms
Results do not match, problem first at offset 709776 :_(
Gemmforge GFLOPs/s: 1499.96
Operational intensity: 2.20041
89.6841 % of roof w. respect to operational intensity achieved with Gemmforge
16.816 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43178 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15098 ms
cuTensor Tensor Contraction took: 23.7021 ms
Results do not match, problem first at offset 1008896 :_(
Gemmforge GFLOPs/s: 1504.34
Operational intensity: 2.20041
89.9464 % of roof w. respect to operational intensity achieved with Gemmforge
16.818 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.32349 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15408 ms
cuTensor Tensor Contraction took: 23.7062 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1252.36
Operational intensity: 2.20041
74.8799 % of roof w. respect to operational intensity achieved with Gemmforge
16.8151 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.71677 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15574 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 1517760 :_(
Gemmforge GFLOPs/s: 1413.45
Operational intensity: 2.20041
84.5117 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32493 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15027 ms
cuTensor Tensor Contraction took: 23.7024 ms
Results do not match, problem first at offset 1566864 :_(
Gemmforge GFLOPs/s: 1541.51
Operational intensity: 2.20041
92.1685 % of roof w. respect to operational intensity achieved with Gemmforge
16.8178 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.75254 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15677 ms
cuTensor Tensor Contraction took: 23.7079 ms
Results do not match, problem first at offset 1075856 :_(
Gemmforge GFLOPs/s: 1402.81
Operational intensity: 2.20041
83.8755 % of roof w. respect to operational intensity achieved with Gemmforge
16.8139 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32445 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15472 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 933008 :_(
Gemmforge GFLOPs/s: 1541.68
Operational intensity: 2.20041
92.1787 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33261 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15293 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 1678496 :_(
Gemmforge GFLOPs/s: 1538.78
Operational intensity: 2.20041
92.0051 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.70157 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15392 ms
cuTensor Tensor Contraction took: 23.706 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1418.02
Operational intensity: 2.20041
84.7849 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.98211 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15472 ms
cuTensor Tensor Contraction took: 23.7068 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1338.17
Operational intensity: 2.20041
80.0107 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.81949 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15245 ms
cuTensor Tensor Contraction took: 23.7036 ms
Results do not match, problem first at offset 1522256 :_(
Gemmforge GFLOPs/s: 1383.32
Operational intensity: 2.20041
82.7105 % of roof w. respect to operational intensity achieved with Gemmforge
16.817 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3455 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15395 ms
cuTensor Tensor Contraction took: 23.7061 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1534.21
Operational intensity: 2.20041
91.7321 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.81638 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16038 ms
cuTensor Tensor Contraction took: 23.7115 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1384.22
Operational intensity: 2.20041
82.7638 % of roof w. respect to operational intensity achieved with Gemmforge
16.8114 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.54678 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15773 ms
cuTensor Tensor Contraction took: 23.7109 ms
Results do not match, problem first at offset 276800 :_(
Gemmforge GFLOPs/s: 1466.29
Operational intensity: 2.20041
87.6712 % of roof w. respect to operational intensity achieved with Gemmforge
16.8118 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32832 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15443 ms
cuTensor Tensor Contraction took: 23.7066 ms
Results do not match, problem first at offset 624960 :_(
Gemmforge GFLOPs/s: 1540.3
Operational intensity: 2.20041
92.0963 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.39011 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15411 ms
cuTensor Tensor Contraction took: 23.7073 ms
Results do not match, problem first at offset 241088 :_(
Gemmforge GFLOPs/s: 1518.62
Operational intensity: 2.20041
90.8 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33702 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15197 ms
cuTensor Tensor Contraction took: 23.7031 ms
Results do not match, problem first at offset 1022256 :_(
Gemmforge GFLOPs/s: 1537.21
Operational intensity: 2.20041
91.9115 % of roof w. respect to operational intensity achieved with Gemmforge
16.8173 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33261 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15555 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 941904 :_(
Gemmforge GFLOPs/s: 1538.78
Operational intensity: 2.20041
92.0051 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32707 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15798 ms
cuTensor Tensor Contraction took: 23.7101 ms
Results do not match, problem first at offset 1075856 :_(
Gemmforge GFLOPs/s: 1540.75
Operational intensity: 2.20041
92.1228 % of roof w. respect to operational intensity achieved with Gemmforge
16.8123 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.50736 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15434 ms
cuTensor Tensor Contraction took: 23.7065 ms
Results do not match, problem first at offset 665136 :_(
Gemmforge GFLOPs/s: 1479.12
Operational intensity: 2.20041
88.4381 % of roof w. respect to operational intensity achieved with Gemmforge
16.8149 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36435 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15149 ms
cuTensor Tensor Contraction took: 23.7026 ms
Results do not match, problem first at offset 834768 :_(
Gemmforge GFLOPs/s: 1527.58
Operational intensity: 2.20041
91.3359 % of roof w. respect to operational intensity achieved with Gemmforge
16.8177 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32896 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15206 ms
cuTensor Tensor Contraction took: 23.7042 ms
Results do not match, problem first at offset 1053536 :_(
Gemmforge GFLOPs/s: 1540.07
Operational intensity: 2.20041
92.0827 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43178 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15162 ms
cuTensor Tensor Contraction took: 23.7027 ms
Results do not match, problem first at offset 1803488 :_(
Gemmforge GFLOPs/s: 1504.34
Operational intensity: 2.20041
89.9464 % of roof w. respect to operational intensity achieved with Gemmforge
16.8176 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.76714 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1519 ms
cuTensor Tensor Contraction took: 23.703 ms
Results do not match, problem first at offset 258912 :_(
Gemmforge GFLOPs/s: 1398.52
Operational intensity: 2.20041
83.6188 % of roof w. respect to operational intensity achieved with Gemmforge
16.8174 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33539 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.156 ms
cuTensor Tensor Contraction took: 23.7081 ms
Results do not match, problem first at offset 1035680 :_(
Gemmforge GFLOPs/s: 1537.79
Operational intensity: 2.20041
91.9461 % of roof w. respect to operational intensity achieved with Gemmforge
16.8137 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43254 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15466 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 1022256 :_(
Gemmforge GFLOPs/s: 1504.08
Operational intensity: 2.20041
89.9308 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36045 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1504 ms
cuTensor Tensor Contraction took: 23.7025 ms
Results do not match, problem first at offset 223232 :_(
Gemmforge GFLOPs/s: 1528.95
Operational intensity: 2.20041
91.4177 % of roof w. respect to operational intensity achieved with Gemmforge
16.8177 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33843 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15283 ms
cuTensor Tensor Contraction took: 23.705 ms
Results do not match, problem first at offset 1294592 :_(
Gemmforge GFLOPs/s: 1536.71
Operational intensity: 2.20041
91.8816 % of roof w. respect to operational intensity achieved with Gemmforge
16.816 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32755 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1665 ms
cuTensor Tensor Contraction took: 23.7186 ms
Results do not match, problem first at offset 1093712 :_(
Gemmforge GFLOPs/s: 1540.57
Operational intensity: 2.20041
92.1126 % of roof w. respect to operational intensity achieved with Gemmforge
16.8063 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35139 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15549 ms
cuTensor Tensor Contraction took: 23.7086 ms
Results do not match, problem first at offset 705344 :_(
Gemmforge GFLOPs/s: 1532.13
Operational intensity: 2.20041
91.608 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34963 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.16026 ms
cuTensor Tensor Contraction took: 23.7134 ms
Results do not match, problem first at offset 1080288 :_(
Gemmforge GFLOPs/s: 1532.75
Operational intensity: 2.20041
91.645 % of roof w. respect to operational intensity achieved with Gemmforge
16.81 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.8535 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15098 ms
cuTensor Tensor Contraction took: 23.7021 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1373.63
Operational intensity: 2.20041
82.1308 % of roof w. respect to operational intensity achieved with Gemmforge
16.818 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48966 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15174 ms
cuTensor Tensor Contraction took: 23.7039 ms
Results do not match, problem first at offset 1825808 :_(
Gemmforge GFLOPs/s: 1484.95
Operational intensity: 2.20041
88.7866 % of roof w. respect to operational intensity achieved with Gemmforge
16.8168 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.76656 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15354 ms
cuTensor Tensor Contraction took: 23.7057 ms
Results do not match, problem first at offset 526784 :_(
Gemmforge GFLOPs/s: 1398.69
Operational intensity: 2.20041
83.6289 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.88086 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5531 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15402 ms
cuTensor Tensor Contraction took: 23.7071 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1365.93
Operational intensity: 2.20041
81.6704 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36592 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15136 ms
cuTensor Tensor Contraction took: 23.7025 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1527.04
Operational intensity: 2.20041
91.3031 % of roof w. respect to operational intensity achieved with Gemmforge
16.8178 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33037 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15267 ms
cuTensor Tensor Contraction took: 23.7048 ms
Results do not match, problem first at offset 1638288 :_(
Gemmforge GFLOPs/s: 1539.57
Operational intensity: 2.20041
92.0527 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32979 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1488 ms
cuTensor Tensor Contraction took: 23.7009 ms
Results do not match, problem first at offset 1973120 :_(
Gemmforge GFLOPs/s: 1539.78
Operational intensity: 2.20041
92.065 % of roof w. respect to operational intensity achieved with Gemmforge
16.8188 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32541 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15194 ms
cuTensor Tensor Contraction took: 23.7041 ms
Results do not match, problem first at offset 1825808 :_(
Gemmforge GFLOPs/s: 1541.34
Operational intensity: 2.20041
92.1583 % of roof w. respect to operational intensity achieved with Gemmforge
16.8166 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.39427 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15514 ms
cuTensor Tensor Contraction took: 23.7073 ms
Results do not match, problem first at offset 1026752 :_(
Gemmforge GFLOPs/s: 1517.18
Operational intensity: 2.20041
90.7141 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35267 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15424 ms
cuTensor Tensor Contraction took: 23.7053 ms
Results do not match, problem first at offset 5142560 :_(
Gemmforge GFLOPs/s: 1531.68
Operational intensity: 2.20041
91.581 % of roof w. respect to operational intensity achieved with Gemmforge
16.8157 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32672 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15322 ms
cuTensor Tensor Contraction took: 23.7033 ms
Results do not match, problem first at offset 915152 :_(
Gemmforge GFLOPs/s: 1540.87
Operational intensity: 2.20041
92.1303 % of roof w. respect to operational intensity achieved with Gemmforge
16.8172 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33267 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15574 ms
cuTensor Tensor Contraction took: 23.7068 ms
Results do not match, problem first at offset 1504400 :_(
Gemmforge GFLOPs/s: 1538.75
Operational intensity: 2.20041
92.0038 % of roof w. respect to operational intensity achieved with Gemmforge
16.8146 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7679 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15501 ms
cuTensor Tensor Contraction took: 23.7071 ms
Results do not match, problem first at offset 1531152 :_(
Gemmforge GFLOPs/s: 1398.29
Operational intensity: 2.20041
83.6053 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.324 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15152 ms
cuTensor Tensor Contraction took: 23.7036 ms
Results do not match, problem first at offset 2048976 :_(
Gemmforge GFLOPs/s: 1541.84
Operational intensity: 2.20041
92.1883 % of roof w. respect to operational intensity achieved with Gemmforge
16.8169 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32611 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15251 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 1674000 :_(
Gemmforge GFLOPs/s: 1541.09
Operational intensity: 2.20041
92.1433 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34918 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15597 ms
cuTensor Tensor Contraction took: 23.7081 ms
Results do not match, problem first at offset 924048 :_(
Gemmforge GFLOPs/s: 1532.91
Operational intensity: 2.20041
91.6545 % of roof w. respect to operational intensity achieved with Gemmforge
16.8138 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42445 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5502 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15171 ms
cuTensor Tensor Contraction took: 23.7019 ms
Results do not match, problem first at offset 611568 :_(
Gemmforge GFLOPs/s: 1506.84
Operational intensity: 2.20041
90.0954 % of roof w. respect to operational intensity achieved with Gemmforge
16.8181 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.7225 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15347 ms
cuTensor Tensor Contraction took: 23.7036 ms
Results do not match, problem first at offset 1517792 :_(
Gemmforge GFLOPs/s: 1411.74
Operational intensity: 2.20041
84.4092 % of roof w. respect to operational intensity achieved with Gemmforge
16.817 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.71114 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1521 ms
cuTensor Tensor Contraction took: 23.7042 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1415.14
Operational intensity: 2.20041
84.6128 % of roof w. respect to operational intensity achieved with Gemmforge
16.8165 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32432 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15654 ms
cuTensor Tensor Contraction took: 23.7087 ms
Results do not match, problem first at offset 1740960 :_(
Gemmforge GFLOPs/s: 1541.73
Operational intensity: 2.20041
92.1815 % of roof w. respect to operational intensity achieved with Gemmforge
16.8134 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32816 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15178 ms
cuTensor Tensor Contraction took: 23.7029 ms
Results do not match, problem first at offset 705312 :_(
Gemmforge GFLOPs/s: 1540.36
Operational intensity: 2.20041
92.0997 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.78934 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5512 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15686 ms
cuTensor Tensor Contraction took: 23.7081 ms
Results do not match, problem first at offset 910688 :_(
Gemmforge GFLOPs/s: 1151.58
Operational intensity: 2.20041
68.8545 % of roof w. respect to operational intensity achieved with Gemmforge
16.8138 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49648 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15238 ms
cuTensor Tensor Contraction took: 23.7045 ms
Results do not match, problem first at offset 1611504 :_(
Gemmforge GFLOPs/s: 1482.7
Operational intensity: 2.20041
88.6521 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
