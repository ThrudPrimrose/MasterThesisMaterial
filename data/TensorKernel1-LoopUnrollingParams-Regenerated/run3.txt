Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35923 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15946 ms
cuTensor Tensor Contraction took: 23.7116 ms
Results do not match, problem first at offset 924080 :_(
Gemmforge GFLOPs/s: 1529.38
Operational intensity: 2.20041
91.4432 % of roof w. respect to operational intensity achieved with Gemmforge
16.8113 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32643 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15667 ms
cuTensor Tensor Contraction took: 23.7078 ms
Results do not match, problem first at offset 1053536 :_(
Gemmforge GFLOPs/s: 1540.97
Operational intensity: 2.20041
92.1365 % of roof w. respect to operational intensity achieved with Gemmforge
16.814 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32634 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15427 ms
cuTensor Tensor Contraction took: 23.7054 ms
Results do not match, problem first at offset 968688 :_(
Gemmforge GFLOPs/s: 1541.01
Operational intensity: 2.20041
92.1385 % of roof w. respect to operational intensity achieved with Gemmforge
16.8157 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32525 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1559 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 526784 :_(
Gemmforge GFLOPs/s: 1541.4
Operational intensity: 2.20041
92.1617 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.35936 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15331 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 1013328 :_(
Gemmforge GFLOPs/s: 1529.33
Operational intensity: 2.20041
91.4405 % of roof w. respect to operational intensity achieved with Gemmforge
16.8164 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.84128 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.553 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15363 ms
cuTensor Tensor Contraction took: 23.7067 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1377.1
Operational intensity: 2.20041
82.3382 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34858 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15107 ms
cuTensor Tensor Contraction took: 23.7022 ms
Results do not match, problem first at offset 928512 :_(
Gemmforge GFLOPs/s: 1533.13
Operational intensity: 2.20041
91.6673 % of roof w. respect to operational intensity achieved with Gemmforge
16.818 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37325 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15514 ms
cuTensor Tensor Contraction took: 23.7073 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1524.48
Operational intensity: 2.20041
91.1501 % of roof w. respect to operational intensity achieved with Gemmforge
16.8143 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32384 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15491 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 781232 :_(
Gemmforge GFLOPs/s: 1541.9
Operational intensity: 2.20041
92.1917 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37578 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15539 ms
cuTensor Tensor Contraction took: 23.7065 ms
Results do not match, problem first at offset 1098176 :_(
Gemmforge GFLOPs/s: 1523.6
Operational intensity: 2.20041
91.0975 % of roof w. respect to operational intensity achieved with Gemmforge
16.8149 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3273 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15491 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 2656112 :_(
Gemmforge GFLOPs/s: 1540.67
Operational intensity: 2.20041
92.1181 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32093 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15539 ms
cuTensor Tensor Contraction took: 23.7075 ms
Results do not match, problem first at offset 2455200 :_(
Gemmforge GFLOPs/s: 1542.94
Operational intensity: 2.20041
92.2538 % of roof w. respect to operational intensity achieved with Gemmforge
16.8142 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32432 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15475 ms
cuTensor Tensor Contraction took: 23.7059 ms
Results do not match, problem first at offset 1535616 :_(
Gemmforge GFLOPs/s: 1541.73
Operational intensity: 2.20041
92.1815 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3223 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15379 ms
cuTensor Tensor Contraction took: 23.7059 ms
Results do not match, problem first at offset 2432912 :_(
Gemmforge GFLOPs/s: 1542.45
Operational intensity: 2.20041
92.2245 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.77565 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15626 ms
cuTensor Tensor Contraction took: 23.7063 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1396.02
Operational intensity: 2.20041
83.4698 % of roof w. respect to operational intensity achieved with Gemmforge
16.815 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32707 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15459 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 1593680 :_(
Gemmforge GFLOPs/s: 1540.75
Operational intensity: 2.20041
92.1228 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32758 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15955 ms
cuTensor Tensor Contraction took: 23.7117 ms
Results do not match, problem first at offset 1049040 :_(
Gemmforge GFLOPs/s: 1540.56
Operational intensity: 2.20041
92.112 % of roof w. respect to operational intensity achieved with Gemmforge
16.8112 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32954 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1519 ms
cuTensor Tensor Contraction took: 23.703 ms
Results do not match, problem first at offset 1035648 :_(
Gemmforge GFLOPs/s: 1539.87
Operational intensity: 2.20041
92.0704 % of roof w. respect to operational intensity achieved with Gemmforge
16.8174 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.48854 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15357 ms
cuTensor Tensor Contraction took: 23.7047 ms
Results do not match, problem first at offset 1830240 :_(
Gemmforge GFLOPs/s: 1485.32
Operational intensity: 2.20041
88.8088 % of roof w. respect to operational intensity achieved with Gemmforge
16.8162 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32672 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15466 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 1040144 :_(
Gemmforge GFLOPs/s: 1540.87
Operational intensity: 2.20041
92.1303 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33222 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15491 ms
cuTensor Tensor Contraction took: 23.706 ms
Results do not match, problem first at offset 959792 :_(
Gemmforge GFLOPs/s: 1538.91
Operational intensity: 2.20041
92.0133 % of roof w. respect to operational intensity achieved with Gemmforge
16.8152 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 5.39117 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15229 ms
cuTensor Tensor Contraction took: 23.7034 ms
Results do not match, problem first at offset 5272016 :_(
Gemmforge GFLOPs/s: 1236.64
Operational intensity: 2.20041
73.9399 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.44666 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15488 ms
cuTensor Tensor Contraction took: 23.706 ms
Results do not match, problem first at offset 245520 :_(
Gemmforge GFLOPs/s: 1499.31
Operational intensity: 2.20041
89.6454 % of roof w. respect to operational intensity achieved with Gemmforge
16.8153 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.3289 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15472 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 910688 :_(
Gemmforge GFLOPs/s: 1540.1
Operational intensity: 2.20041
92.084 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33482 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15363 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 1026720 :_(
Gemmforge GFLOPs/s: 1537.99
Operational intensity: 2.20041
91.9583 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32902 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15347 ms
cuTensor Tensor Contraction took: 23.7046 ms
Results do not match, problem first at offset 1508864 :_(
Gemmforge GFLOPs/s: 1540.05
Operational intensity: 2.20041
92.0813 % of roof w. respect to operational intensity achieved with Gemmforge
16.8163 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32717 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15453 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 1111568 :_(
Gemmforge GFLOPs/s: 1540.71
Operational intensity: 2.20041
92.1208 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.42941 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15488 ms
cuTensor Tensor Contraction took: 23.707 ms
Results do not match, problem first at offset 1491008 :_(
Gemmforge GFLOPs/s: 1505.15
Operational intensity: 2.20041
89.9945 % of roof w. respect to operational intensity achieved with Gemmforge
16.8145 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.62589 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15718 ms
cuTensor Tensor Contraction took: 23.7093 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1441.22
Operational intensity: 2.20041
86.172 % of roof w. respect to operational intensity achieved with Gemmforge
16.8129 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32477 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15338 ms
cuTensor Tensor Contraction took: 23.7055 ms
Results do not match, problem first at offset 1825776 :_(
Gemmforge GFLOPs/s: 1541.57
Operational intensity: 2.20041
92.1719 % of roof w. respect to operational intensity achieved with Gemmforge
16.8156 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32851 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1535 ms
cuTensor Tensor Contraction took: 23.7056 ms
Results do not match, problem first at offset 977648 :_(
Gemmforge GFLOPs/s: 1540.23
Operational intensity: 2.20041
92.0922 % of roof w. respect to operational intensity achieved with Gemmforge
16.8155 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36342 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15229 ms
cuTensor Tensor Contraction took: 23.7034 ms
Results do not match, problem first at offset 308016 :_(
Gemmforge GFLOPs/s: 1527.91
Operational intensity: 2.20041
91.3554 % of roof w. respect to operational intensity achieved with Gemmforge
16.8171 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.79104 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1529 ms
cuTensor Tensor Contraction took: 23.703 ms
Results do not match, problem first at offset 1526720 :_(
Gemmforge GFLOPs/s: 1391.54
Operational intensity: 2.20041
83.2016 % of roof w. respect to operational intensity achieved with Gemmforge
16.8174 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33229 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1599 ms
cuTensor Tensor Contraction took: 23.711 ms
Results do not match, problem first at offset 1607072 :_(
Gemmforge GFLOPs/s: 1538.89
Operational intensity: 2.20041
92.0119 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.52211 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15411 ms
cuTensor Tensor Contraction took: 23.7062 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1474.29
Operational intensity: 2.20041
88.1496 % of roof w. respect to operational intensity achieved with Gemmforge
16.8151 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32566 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15507 ms
cuTensor Tensor Contraction took: 23.7072 ms
Results do not match, problem first at offset 1432976 :_(
Gemmforge GFLOPs/s: 1541.25
Operational intensity: 2.20041
92.1528 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.37981 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5512 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15549 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 794624 :_(
Gemmforge GFLOPs/s: 1522.19
Operational intensity: 2.20041
91.0136 % of roof w. respect to operational intensity achieved with Gemmforge
16.8148 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.43939 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15274 ms
cuTensor Tensor Contraction took: 23.7047 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1501.76
Operational intensity: 2.20041
89.7921 % of roof w. respect to operational intensity achieved with Gemmforge
16.8161 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32499 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15888 ms
cuTensor Tensor Contraction took: 23.711 ms
Results do not match, problem first at offset 1035680 :_(
Gemmforge GFLOPs/s: 1541.49
Operational intensity: 2.20041
92.1672 % of roof w. respect to operational intensity achieved with Gemmforge
16.8117 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32714 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15734 ms
cuTensor Tensor Contraction took: 23.7095 ms
Results do not match, problem first at offset 995472 :_(
Gemmforge GFLOPs/s: 1540.72
Operational intensity: 2.20041
92.1215 % of roof w. respect to operational intensity achieved with Gemmforge
16.8128 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34941 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15302 ms
cuTensor Tensor Contraction took: 23.7051 ms
Results do not match, problem first at offset 526784 :_(
Gemmforge GFLOPs/s: 1532.83
Operational intensity: 2.20041
91.6498 % of roof w. respect to operational intensity achieved with Gemmforge
16.8159 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78902 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.156 ms
cuTensor Tensor Contraction took: 23.7081 ms
Results do not match, problem first at offset 852656 :_(
Gemmforge GFLOPs/s: 1392.12
Operational intensity: 2.20041
83.2366 % of roof w. respect to operational intensity achieved with Gemmforge
16.8137 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33856 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5501 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15382 ms
cuTensor Tensor Contraction took: 23.7039 ms
Results do not match, problem first at offset 1990944 :_(
Gemmforge GFLOPs/s: 1536.67
Operational intensity: 2.20041
91.8789 % of roof w. respect to operational intensity achieved with Gemmforge
16.8167 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.51693 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15808 ms
cuTensor Tensor Contraction took: 23.7092 ms
Results do not match, problem first at offset 986576 :_(
Gemmforge GFLOPs/s: 1475.98
Operational intensity: 2.20041
88.2507 % of roof w. respect to operational intensity achieved with Gemmforge
16.813 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.49622 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5532 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15408 ms
cuTensor Tensor Contraction took: 23.7072 ms
Results do not match, problem first at offset 1821312 :_(
Gemmforge GFLOPs/s: 1482.78
Operational intensity: 2.20041
88.6571 % of roof w. respect to operational intensity achieved with Gemmforge
16.8144 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.34954 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15549 ms
cuTensor Tensor Contraction took: 23.7076 ms
Results do not match, problem first at offset 857120 :_(
Gemmforge GFLOPs/s: 1532.79
Operational intensity: 2.20041
91.6471 % of roof w. respect to operational intensity achieved with Gemmforge
16.8141 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.33824 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15459 ms
cuTensor Tensor Contraction took: 23.7067 ms
Results do not match, problem first at offset 2673968 :_(
Gemmforge GFLOPs/s: 1536.78
Operational intensity: 2.20041
91.8857 % of roof w. respect to operational intensity achieved with Gemmforge
16.8147 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.78477 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15981 ms
cuTensor Tensor Contraction took: 23.7119 ms
Results do not match, problem first at offset 1540112 :_(
Gemmforge GFLOPs/s: 1393.36
Operational intensity: 2.20041
83.3107 % of roof w. respect to operational intensity achieved with Gemmforge
16.811 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32528 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5511 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15738 ms
cuTensor Tensor Contraction took: 23.7085 ms
Results do not match, problem first at offset 1062432 :_(
Gemmforge GFLOPs/s: 1541.38
Operational intensity: 2.20041
92.161 % of roof w. respect to operational intensity achieved with Gemmforge
16.8135 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.32864 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15229 ms
cuTensor Tensor Contraction took: 23.7044 ms
Results do not match, problem first at offset 1772240 :_(
Gemmforge GFLOPs/s: 1540.19
Operational intensity: 2.20041
92.0895 % of roof w. respect to operational intensity achieved with Gemmforge
16.8164 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.36237 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.551 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15178 ms
cuTensor Tensor Contraction took: 23.7028 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1528.28
Operational intensity: 2.20041
91.3775 % of roof w. respect to operational intensity achieved with Gemmforge
16.8175 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.324 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.1561 ms
cuTensor Tensor Contraction took: 23.7082 ms
Results do not match, problem first at offset 866048 :_(
Gemmforge GFLOPs/s: 1541.84
Operational intensity: 2.20041
92.1883 % of roof w. respect to operational intensity achieved with Gemmforge
16.8137 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 2.61226
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 4.4305 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 2.75218
Current Device Alloc Size: 2.7518
cuTensor Kernel 1
Alloc additional buffer: 2.25438
Current Device Alloc Size: 5.00619
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 1 took: 21.5521 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 2.76743
Sub-kernel 1 succeeded.
Current Device Alloc Size: 2.7518
cuTensor sub-kernel 2 took: 2.15366 ms
cuTensor Tensor Contraction took: 23.7058 ms
Results do not match, problem first at offset 763376 :_(
Gemmforge GFLOPs/s: 1504.78
Operational intensity: 2.20041
89.9724 % of roof w. respect to operational intensity achieved with Gemmforge
16.8154 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
