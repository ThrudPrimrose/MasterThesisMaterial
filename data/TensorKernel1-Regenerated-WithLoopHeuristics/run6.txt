Current Device Alloc Size: 6.69405
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 16.0603 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.05261
Current Device Alloc Size: 7.05165
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05165
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05165
cuTensor sub-kernel 1 took: 40.6436 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.06727
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05165
cuTensor sub-kernel 2 took: 4.34634 ms
cuTensor Tensor Contraction took: 44.9899 ms
Results do not match, problem first at offset 915152 :_(
Gemmforge GFLOPs/s: 1063.76
Operational intensity: 2.20041
63.6035 % of roof w. respect to operational intensity achieved with Gemmforge
22.7049 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69435
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(32,32), B(32,32,32), C(32,32), w(32)
Gemmforge Tensor Contraction took: 10.5049 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.89102
Current Device Alloc Size: 6.88948
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.88948
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.88948
cuTensor sub-kernel 1 took: 22.953 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.90511
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.88948
cuTensor sub-kernel 2 took: 1.23498 ms
cuTensor Tensor Contraction took: 24.1879 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 648.291
Operational intensity: 0.920607
92.6481 % of roof w. respect to operational intensity achieved with Gemmforge
40.2372 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69446
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(53,33), B(21,23,53), C(21,33), w(23)
Gemmforge Tensor Contraction took: 13.6982 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.95988
Current Device Alloc Size: 6.95797
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.95797
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.95797
cuTensor sub-kernel 1 took: 61.1974 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.97359
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.95797
cuTensor sub-kernel 2 took: 2.25501 ms
cuTensor Tensor Contraction took: 63.4524 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 586.094
Operational intensity: 1.0903
70.7233 % of roof w. respect to operational intensity achieved with Gemmforge
15.2678 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69579
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(11,73), B(31,27,11), C(31,73), w(27)
Gemmforge Tensor Contraction took: 12.0644 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.8813
Current Device Alloc Size: 6.87694
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.87694
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.87694
cuTensor sub-kernel 1 took: 49.6876 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.89257
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.87694
cuTensor sub-kernel 2 took: 5.20842 ms
cuTensor Tensor Contraction took: 54.8961 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 852.926
Operational intensity: 1.20962
92.7687 % of roof w. respect to operational intensity achieved with Gemmforge
20.3875 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.82487
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(3,11), B(5,7,3), C(5,11), w(7)
Gemmforge Tensor Contraction took: 21.8799 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.31705
Current Device Alloc Size: 7.05455
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05455
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05455
cuTensor sub-kernel 1 took: 264.526 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.07018
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05455
cuTensor sub-kernel 2 took: 221.886 ms
cuTensor Tensor Contraction took: 486.412 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 239.52
Operational intensity: 0.583333
54.0215 % of roof w. respect to operational intensity achieved with Gemmforge
2.43001 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.6994
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(16,16), B(16,16,16), C(16,16), w(16)
Gemmforge Tensor Contraction took: 10.8253 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.06966
Current Device Alloc Size: 7.05809
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05809
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05809
cuTensor sub-kernel 1 took: 20.7585 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.07371
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05809
cuTensor sub-kernel 2 took: 3.90954 ms
cuTensor Tensor Contraction took: 24.6681 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 596.788
Operational intensity: 0.852459
92.1058 % of roof w. respect to operational intensity achieved with Gemmforge
40.4196 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
