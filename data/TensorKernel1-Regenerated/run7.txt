Current Device Alloc Size: 6.69405
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(48,72), B(62,16,48), C(62,72), w(16)
Gemmforge Tensor Contraction took: 11.8003 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.05261
Current Device Alloc Size: 7.05165
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05165
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05165
cuTensor sub-kernel 1 took: 55.2131 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.06727
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05165
cuTensor sub-kernel 2 took: 5.47942 ms
cuTensor Tensor Contraction took: 60.6925 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 1447.79
Operational intensity: 2.20041
86.5647 % of roof w. respect to operational intensity achieved with Gemmforge
16.8306 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69435
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(32,32), B(32,32,32), C(32,32), w(32)
Gemmforge Tensor Contraction took: 10.5108 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.89102
Current Device Alloc Size: 6.88948
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.88948
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.88948
cuTensor sub-kernel 1 took: 31.2207 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.90511
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.88948
cuTensor sub-kernel 2 took: 1.22435 ms
cuTensor Tensor Contraction took: 32.4451 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 647.922
Operational intensity: 0.920607
92.5954 % of roof w. respect to operational intensity achieved with Gemmforge
29.997 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69446
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(53,33), B(21,23,53), C(21,33), w(23)
Gemmforge Tensor Contraction took: 10.6283 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.95988
Current Device Alloc Size: 6.95797
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.95797
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.95797
cuTensor sub-kernel 1 took: 84.0663 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.97359
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.95797
cuTensor sub-kernel 2 took: 3.01392 ms
cuTensor Tensor Contraction took: 87.0802 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 755.387
Operational intensity: 1.0903
91.1515 % of roof w. respect to operational intensity achieved with Gemmforge
11.1252 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.69579
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(11,73), B(31,27,11), C(31,73), w(27)
Gemmforge Tensor Contraction took: 12.0717 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 6.8813
Current Device Alloc Size: 6.87694
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 6.87694
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.87694
cuTensor sub-kernel 1 took: 68.1974 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 6.89257
Sub-kernel 1 succeeded.
Current Device Alloc Size: 6.87694
cuTensor sub-kernel 2 took: 6.56611 ms
cuTensor Tensor Contraction took: 74.7635 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 852.403
Operational intensity: 1.20962
92.7119 % of roof w. respect to operational intensity achieved with Gemmforge
14.9698 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.82487
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(3,11), B(5,7,3), C(5,11), w(7)
Gemmforge Tensor Contraction took: 25.8678 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.31705
Current Device Alloc Size: 7.05455
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05455
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05455
cuTensor sub-kernel 1 took: 356.241 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.07018
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05455
cuTensor sub-kernel 2 took: 293.427 ms
cuTensor Tensor Contraction took: 649.669 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 202.595
Operational intensity: 0.583333
45.6933 % of roof w. respect to operational intensity achieved with Gemmforge
1.81936 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
Current Device Alloc Size: 6.6994
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with Gemmforge
Shapes and dims: A(16,16), B(16,16,16), C(16,16), w(16)
Gemmforge Tensor Contraction took: 10.8014 ms
Will compute the kernel: C['ij'] <= C['ij'] + A['lj'] * B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 1: X['il'] <= B['ikl'] * w['k'], with cuTensor
Need to split into 2 kernels, 2: C['ij'] <=  A['lj'] * X['il'], with cuTensor
Batched version managed through: C['ijb'] <= C['ijb'] + A['ljb'] * B['iklb'] * w['kb'], with cuTensor
Current Device Alloc Size: 7.06966
Current Device Alloc Size: 7.05809
cuTensor Kernel 1
Alloc additional buffer: 0
Current Device Alloc Size: 7.05809
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05809
cuTensor sub-kernel 1 took: 28.2552 ms
cuTensor Kernel 2
Alloc additional buffer: 0.0156252
Current Device Alloc Size: 7.07371
Sub-kernel 1 succeeded.
Current Device Alloc Size: 7.05809
cuTensor sub-kernel 2 took: 5.20621 ms
cuTensor Tensor Contraction took: 33.4614 ms
Gemmforge and cuTensor contraction results match! :)
Gemmforge GFLOPs/s: 598.11
Operational intensity: 0.852459
92.3099 % of roof w. respect to operational intensity achieved with Gemmforge
29.7977 % of roof w. respect to operational intensity achieved with cuTensor
Current Device Alloc Size: 0
