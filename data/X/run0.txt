Dimensions: 10, 32, 45, 17, 10, 32
Gemmforge Tensor Contraction took: 113.563 ms
Gemmforge Theoretical Fused Kernel GFLOPs/s: 276.696
Operational Theoretical Fused intensity: 5.81907
Gemmforge GFLOPs/s: 276.696
Operational intensity: 3.43254
6.25589 % of roof w. respect to operational intensity achieved with Gemmforge
10.6054 % of roof w. respect to unfused operational intensity achieved with Gemmforge
19.9858 % of roof w. respect to Kernel1 intensity achieved with Gemmforge
7.75167 % of roof w. respect to Kernel2 intensity achieved with Gemmforge
21.7762 % of roof w. respect to Kernel3 intensity achieved with Gemmforge
Dimensions: 9, 14, 46, 83, 9, 14
Gemmforge Tensor Contraction took: 96.3836 ms
Gemmforge Theoretical Fused Kernel GFLOPs/s: 221.062
Operational Theoretical Fused intensity: 3.44805
Gemmforge GFLOPs/s: 221.062
Operational intensity: 1.84377
8.43493 % of roof w. respect to operational intensity achieved with Gemmforge
15.7743 % of roof w. respect to unfused operational intensity achieved with Gemmforge
6.78842 % of roof w. respect to Kernel1 intensity achieved with Gemmforge
13.8808 % of roof w. respect to Kernel2 intensity achieved with Gemmforge
19.3936 % of roof w. respect to Kernel3 intensity achieved with Gemmforge
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>)
dense(shape=(21, 22), size=462, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 13), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 22), size=462, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(22, 13), bbox=BoundingBox(Range(0, 22), Range(0, 13)), stride=(1, 22), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(22, 13), size=286, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 21), Range(0, 13), Range(0, 22))), 'matrix_a': DenseMatrix{name = None, num. rows = 21, num. columns = 22, leading dimension = 21, direction = None, bbox = [0, 0, 21, 22]}, 'matrix_b': DenseMatrix{name = None, num. rows = 22, num. columns = 13, leading dimension = 22, direction = None, bbox = [0, 0, 22, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 21, num. columns = 13, leading dimension = 21, direction = None, bbox = [0, 0, 21, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 13), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 22), size=462, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(22, 13), bbox=BoundingBox(Range(0, 22), Range(0, 13)), stride=(1, 22), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(22, 13), size=286, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 21), Range(0, 13), Range(0, 22))), 'matrix_a': DenseMatrix{name = None, num. rows = 21, num. columns = 22, leading dimension = 21, direction = None, bbox = [0, 0, 21, 22]}, 'matrix_b': DenseMatrix{name = None, num. rows = 22, num. columns = 13, leading dimension = 22, direction = None, bbox = [0, 0, 22, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 21, num. columns = 13, leading dimension = 21, direction = None, bbox = [0, 0, 21, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 13), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 22), size=462, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(22, 13), bbox=BoundingBox(Range(0, 22), Range(0, 13)), stride=(1, 22), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(22, 13), size=286, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 21), Range(0, 13), Range(0, 22))), 'matrix_a': DenseMatrix{name = None, num. rows = 21, num. columns = 22, leading dimension = 21, direction = None, bbox = [0, 0, 21, 22]}, 'matrix_b': DenseMatrix{name = None, num. rows = 22, num. columns = 13, leading dimension = 22, direction = None, bbox = [0, 0, 22, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 21, num. columns = 13, leading dimension = 21, direction = None, bbox = [0, 0, 21, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 21
	num. columns = 22
	bounding box = [0, 0, 21, 22]
	addressing = pointer_based
	num. actual rows = 21
	num. actual cols = 22
	leading dimension = 21
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 22
	num. columns = 13
	bounding box = [0, 0, 22, 13]
	addressing = pointer_based
	num. actual rows = 22
	num. actual cols = 13
	leading dimension = 22
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 21
	num. columns = 13
	bounding box = [0, 0, 21, 13]
	addressing = pointer_based
	num. actual rows = 21
	num. actual cols = 13
	leading dimension = 21
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = D, num. rows = 22, num. columns = 13, leading dimension = 22, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 22, 13]}, DenseMatrix{name = C, num. rows = 21, num. columns = 22, leading dimension = 21, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 21, 22]}, DenseMatrix{name = X, num. rows = 21, num. columns = 13, leading dimension = 21, direction = DataFlowDirection.SINK, bbox = [0, 0, 21, 13]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 13), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 22), size=462, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(22, 13), bbox=BoundingBox(Range(0, 22), Range(0, 13)), stride=(1, 22), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(22, 13), size=286, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 21), Range(0, 13), Range(0, 22))), 'matrix_a': DenseMatrix{name = None, num. rows = 21, num. columns = 22, leading dimension = 21, direction = None, bbox = [0, 0, 21, 22]}, 'matrix_b': DenseMatrix{name = None, num. rows = 22, num. columns = 13, leading dimension = 22, direction = None, bbox = [0, 0, 22, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 21, num. columns = 13, leading dimension = 21, direction = None, bbox = [0, 0, 21, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 13), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(21, 22), bbox=BoundingBox(Range(0, 21), Range(0, 22)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(21, 22), size=462, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(22, 13), bbox=BoundingBox(Range(0, 22), Range(0, 13)), stride=(1, 22), align=<yateto.arch.Architecture object at 0x7f76605bab50>),	  eqspp=dense(shape=(22, 13), size=286, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 21), Range(0, 13), Range(0, 22))), 'matrix_a': DenseMatrix{name = None, num. rows = 21, num. columns = 22, leading dimension = 21, direction = None, bbox = [0, 0, 21, 22]}, 'matrix_b': DenseMatrix{name = None, num. rows = 22, num. columns = 13, leading dimension = 22, direction = None, bbox = [0, 0, 22, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 21, num. columns = 13, leading dimension = 21, direction = None, bbox = [0, 0, 21, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d22_13_d21_22_d21_13__alpha_1_0_beta_0_0_p_p_p__0c104b3
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>)
dense(shape=(273, 61), size=16653, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(273, 10), bbox=BoundingBox(Range(0, 273), Range(0, 10)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 10), size=2730, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 61), size=16653, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(61, 10), bbox=BoundingBox(Range(0, 61), Range(0, 10)), stride=(1, 61), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(61, 10), size=610, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 273), Range(0, 10), Range(0, 61))), 'matrix_a': DenseMatrix{name = None, num. rows = 273, num. columns = 61, leading dimension = 273, direction = None, bbox = [0, 0, 273, 61]}, 'matrix_b': DenseMatrix{name = None, num. rows = 61, num. columns = 10, leading dimension = 61, direction = None, bbox = [0, 0, 61, 10]}, 'matrix_c': DenseMatrix{name = None, num. rows = 273, num. columns = 10, leading dimension = 273, direction = None, bbox = [0, 0, 273, 10]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(273, 10), bbox=BoundingBox(Range(0, 273), Range(0, 10)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 10), size=2730, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 61), size=16653, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(61, 10), bbox=BoundingBox(Range(0, 61), Range(0, 10)), stride=(1, 61), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(61, 10), size=610, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 273), Range(0, 10), Range(0, 61))), 'matrix_a': DenseMatrix{name = None, num. rows = 273, num. columns = 61, leading dimension = 273, direction = None, bbox = [0, 0, 273, 61]}, 'matrix_b': DenseMatrix{name = None, num. rows = 61, num. columns = 10, leading dimension = 61, direction = None, bbox = [0, 0, 61, 10]}, 'matrix_c': DenseMatrix{name = None, num. rows = 273, num. columns = 10, leading dimension = 273, direction = None, bbox = [0, 0, 273, 10]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(273, 10), bbox=BoundingBox(Range(0, 273), Range(0, 10)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 10), size=2730, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 61), size=16653, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(61, 10), bbox=BoundingBox(Range(0, 61), Range(0, 10)), stride=(1, 61), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(61, 10), size=610, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 273), Range(0, 10), Range(0, 61))), 'matrix_a': DenseMatrix{name = None, num. rows = 273, num. columns = 61, leading dimension = 273, direction = None, bbox = [0, 0, 273, 61]}, 'matrix_b': DenseMatrix{name = None, num. rows = 61, num. columns = 10, leading dimension = 61, direction = None, bbox = [0, 0, 61, 10]}, 'matrix_c': DenseMatrix{name = None, num. rows = 273, num. columns = 10, leading dimension = 273, direction = None, bbox = [0, 0, 273, 10]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 273
	num. columns = 61
	bounding box = [0, 0, 273, 61]
	addressing = pointer_based
	num. actual rows = 273
	num. actual cols = 61
	leading dimension = 273
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 61
	num. columns = 10
	bounding box = [0, 0, 61, 10]
	addressing = pointer_based
	num. actual rows = 61
	num. actual cols = 10
	leading dimension = 61
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 273
	num. columns = 10
	bounding box = [0, 0, 273, 10]
	addressing = pointer_based
	num. actual rows = 273
	num. actual cols = 10
	leading dimension = 273
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = E, num. rows = 273, num. columns = 61, leading dimension = 273, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 273, 61]}, DenseMatrix{name = F, num. rows = 61, num. columns = 10, leading dimension = 61, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 61, 10]}, DenseMatrix{name = A, num. rows = 273, num. columns = 10, leading dimension = 273, direction = DataFlowDirection.SINK, bbox = [0, 0, 273, 10]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(273, 10), bbox=BoundingBox(Range(0, 273), Range(0, 10)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 10), size=2730, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 61), size=16653, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(61, 10), bbox=BoundingBox(Range(0, 61), Range(0, 10)), stride=(1, 61), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(61, 10), size=610, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 273), Range(0, 10), Range(0, 61))), 'matrix_a': DenseMatrix{name = None, num. rows = 273, num. columns = 61, leading dimension = 273, direction = None, bbox = [0, 0, 273, 61]}, 'matrix_b': DenseMatrix{name = None, num. rows = 61, num. columns = 10, leading dimension = 61, direction = None, bbox = [0, 0, 61, 10]}, 'matrix_c': DenseMatrix{name = None, num. rows = 273, num. columns = 10, leading dimension = 273, direction = None, bbox = [0, 0, 273, 10]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(273, 10), bbox=BoundingBox(Range(0, 273), Range(0, 10)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 10), size=2730, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(273, 61), bbox=BoundingBox(Range(0, 273), Range(0, 61)), stride=(1, 273), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(273, 61), size=16653, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(61, 10), bbox=BoundingBox(Range(0, 61), Range(0, 10)), stride=(1, 61), align=<yateto.arch.Architecture object at 0x7f76628d3190>),	  eqspp=dense(shape=(61, 10), size=610, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 273), Range(0, 10), Range(0, 61))), 'matrix_a': DenseMatrix{name = None, num. rows = 273, num. columns = 61, leading dimension = 273, direction = None, bbox = [0, 0, 273, 61]}, 'matrix_b': DenseMatrix{name = None, num. rows = 61, num. columns = 10, leading dimension = 61, direction = None, bbox = [0, 0, 61, 10]}, 'matrix_c': DenseMatrix{name = None, num. rows = 273, num. columns = 10, leading dimension = 273, direction = None, bbox = [0, 0, 273, 10]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d273_61_d61_10_d273_10__alpha_1_0_beta_1_0_p_p_p__f8148f1
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(21, 13, 10), bbox=BoundingBox(Range(0, 21), Range(0, 13), Range(0, 10)), stride=(1, 21, 273), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(21, 13, 10), size=2730, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(10,), bbox=BoundingBox(Range(0, 10)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(10,), size=10, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(21, 13), size=273, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 10), 'p': Range(0, 13), 'k': Range(0, 21)}
)
i1:  [Range(0, 10)]
i2:  BoundingBox(Range(0, 10))
i1:  [Range(0, 21), Range(0, 13)]
i2:  BoundingBox(Range(0, 21), Range(0, 13))
i1:  [Range(0, 21), Range(0, 13), Range(0, 10)]
i2:  BoundingBox(Range(0, 21), Range(0, 13), Range(0, 10))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605d91d0>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [10], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [21, 13], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [21, 13, 10], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = X, addressing = pointer_based, dimensions = [21, 13], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = B, addressing = pointer_based, dimensions = [10], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [21, 13, 10], dataflow direction = DataFlowDirection.SINK}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: X, type: SymbolType.Batch, name: B, type: SymbolType.Batch, name: A, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: B, type: SymbolType.Batch
name: A, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(21, 13, 10), bbox=BoundingBox(Range(0, 21), Range(0, 13), Range(0, 10)), stride=(1, 21, 273), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(21, 13, 10), size=2730, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(10,), bbox=BoundingBox(Range(0, 10)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(10,), size=10, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(21, 13), bbox=BoundingBox(Range(0, 21), Range(0, 13)), stride=(1, 21), align=<yateto.arch.Architecture object at 0x7f76605b9c90>), eqspp=dense(shape=(21, 13), size=273, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 10), 'p': Range(0, 13), 'k': Range(0, 21)}
)
0 1 k
1 21 p
2 273 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 21, 273, 2730]
[('rankOffset2', 21), ('rankOffset1', 1)]
[1, 21, 273, 2730]
[('rankOffset2', 21), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d21_13_d10_d21_13_10__alpha_1_0_p_p_p__fb5dcac
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>)
dense(shape=(3, 11), size=33, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 13), size=39, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 11), size=33, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(11, 13), bbox=BoundingBox(Range(0, 11), Range(0, 13)), stride=(1, 11), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(11, 13), size=143, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 3), Range(0, 13), Range(0, 11))), 'matrix_a': DenseMatrix{name = None, num. rows = 3, num. columns = 11, leading dimension = 3, direction = None, bbox = [0, 0, 3, 11]}, 'matrix_b': DenseMatrix{name = None, num. rows = 11, num. columns = 13, leading dimension = 11, direction = None, bbox = [0, 0, 11, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 3, num. columns = 13, leading dimension = 3, direction = None, bbox = [0, 0, 3, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 13), size=39, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 11), size=33, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(11, 13), bbox=BoundingBox(Range(0, 11), Range(0, 13)), stride=(1, 11), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(11, 13), size=143, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 3), Range(0, 13), Range(0, 11))), 'matrix_a': DenseMatrix{name = None, num. rows = 3, num. columns = 11, leading dimension = 3, direction = None, bbox = [0, 0, 3, 11]}, 'matrix_b': DenseMatrix{name = None, num. rows = 11, num. columns = 13, leading dimension = 11, direction = None, bbox = [0, 0, 11, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 3, num. columns = 13, leading dimension = 3, direction = None, bbox = [0, 0, 3, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 13), size=39, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 11), size=33, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(11, 13), bbox=BoundingBox(Range(0, 11), Range(0, 13)), stride=(1, 11), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(11, 13), size=143, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 3), Range(0, 13), Range(0, 11))), 'matrix_a': DenseMatrix{name = None, num. rows = 3, num. columns = 11, leading dimension = 3, direction = None, bbox = [0, 0, 3, 11]}, 'matrix_b': DenseMatrix{name = None, num. rows = 11, num. columns = 13, leading dimension = 11, direction = None, bbox = [0, 0, 11, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 3, num. columns = 13, leading dimension = 3, direction = None, bbox = [0, 0, 3, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 3
	num. columns = 11
	bounding box = [0, 0, 3, 11]
	addressing = pointer_based
	num. actual rows = 3
	num. actual cols = 11
	leading dimension = 3
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 11
	num. columns = 13
	bounding box = [0, 0, 11, 13]
	addressing = pointer_based
	num. actual rows = 11
	num. actual cols = 13
	leading dimension = 11
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 3
	num. columns = 13
	bounding box = [0, 0, 3, 13]
	addressing = pointer_based
	num. actual rows = 3
	num. actual cols = 13
	leading dimension = 3
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = D, num. rows = 11, num. columns = 13, leading dimension = 11, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 11, 13]}, DenseMatrix{name = C, num. rows = 3, num. columns = 11, leading dimension = 3, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 3, 11]}, DenseMatrix{name = X, num. rows = 3, num. columns = 13, leading dimension = 3, direction = DataFlowDirection.SINK, bbox = [0, 0, 3, 13]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 13), size=39, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 11), size=33, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(11, 13), bbox=BoundingBox(Range(0, 11), Range(0, 13)), stride=(1, 11), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(11, 13), size=143, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 3), Range(0, 13), Range(0, 11))), 'matrix_a': DenseMatrix{name = None, num. rows = 3, num. columns = 11, leading dimension = 3, direction = None, bbox = [0, 0, 3, 11]}, 'matrix_b': DenseMatrix{name = None, num. rows = 11, num. columns = 13, leading dimension = 11, direction = None, bbox = [0, 0, 11, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 3, num. columns = 13, leading dimension = 3, direction = None, bbox = [0, 0, 3, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 13), size=39, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(3, 11), bbox=BoundingBox(Range(0, 3), Range(0, 11)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(3, 11), size=33, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(11, 13), bbox=BoundingBox(Range(0, 11), Range(0, 13)), stride=(1, 11), align=<yateto.arch.Architecture object at 0x7f76605d9c10>),	  eqspp=dense(shape=(11, 13), size=143, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 3), Range(0, 13), Range(0, 11))), 'matrix_a': DenseMatrix{name = None, num. rows = 3, num. columns = 11, leading dimension = 3, direction = None, bbox = [0, 0, 3, 11]}, 'matrix_b': DenseMatrix{name = None, num. rows = 11, num. columns = 13, leading dimension = 11, direction = None, bbox = [0, 0, 11, 13]}, 'matrix_c': DenseMatrix{name = None, num. rows = 3, num. columns = 13, leading dimension = 3, direction = None, bbox = [0, 0, 3, 13]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d11_13_d3_11_d3_13__alpha_1_0_beta_0_0_p_p_p__ffcb4ae
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>)
dense(shape=(39, 7), size=273, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(39, 5), bbox=BoundingBox(Range(0, 39), Range(0, 5)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 5), size=195, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 7), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(7, 5), bbox=BoundingBox(Range(0, 7), Range(0, 5)), stride=(1, 7), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(7, 5), size=35, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 39), Range(0, 5), Range(0, 7))), 'matrix_a': DenseMatrix{name = None, num. rows = 39, num. columns = 7, leading dimension = 39, direction = None, bbox = [0, 0, 39, 7]}, 'matrix_b': DenseMatrix{name = None, num. rows = 7, num. columns = 5, leading dimension = 7, direction = None, bbox = [0, 0, 7, 5]}, 'matrix_c': DenseMatrix{name = None, num. rows = 39, num. columns = 5, leading dimension = 39, direction = None, bbox = [0, 0, 39, 5]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(39, 5), bbox=BoundingBox(Range(0, 39), Range(0, 5)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 5), size=195, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 7), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(7, 5), bbox=BoundingBox(Range(0, 7), Range(0, 5)), stride=(1, 7), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(7, 5), size=35, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 39), Range(0, 5), Range(0, 7))), 'matrix_a': DenseMatrix{name = None, num. rows = 39, num. columns = 7, leading dimension = 39, direction = None, bbox = [0, 0, 39, 7]}, 'matrix_b': DenseMatrix{name = None, num. rows = 7, num. columns = 5, leading dimension = 7, direction = None, bbox = [0, 0, 7, 5]}, 'matrix_c': DenseMatrix{name = None, num. rows = 39, num. columns = 5, leading dimension = 39, direction = None, bbox = [0, 0, 39, 5]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(39, 5), bbox=BoundingBox(Range(0, 39), Range(0, 5)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 5), size=195, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 7), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(7, 5), bbox=BoundingBox(Range(0, 7), Range(0, 5)), stride=(1, 7), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(7, 5), size=35, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 39), Range(0, 5), Range(0, 7))), 'matrix_a': DenseMatrix{name = None, num. rows = 39, num. columns = 7, leading dimension = 39, direction = None, bbox = [0, 0, 39, 7]}, 'matrix_b': DenseMatrix{name = None, num. rows = 7, num. columns = 5, leading dimension = 7, direction = None, bbox = [0, 0, 7, 5]}, 'matrix_c': DenseMatrix{name = None, num. rows = 39, num. columns = 5, leading dimension = 39, direction = None, bbox = [0, 0, 39, 5]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 39
	num. columns = 7
	bounding box = [0, 0, 39, 7]
	addressing = pointer_based
	num. actual rows = 39
	num. actual cols = 7
	leading dimension = 39
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 7
	num. columns = 5
	bounding box = [0, 0, 7, 5]
	addressing = pointer_based
	num. actual rows = 7
	num. actual cols = 5
	leading dimension = 7
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 39
	num. columns = 5
	bounding box = [0, 0, 39, 5]
	addressing = pointer_based
	num. actual rows = 39
	num. actual cols = 5
	leading dimension = 39
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = A, num. rows = 39, num. columns = 5, leading dimension = 39, direction = DataFlowDirection.SINK, bbox = [0, 0, 39, 5]}, DenseMatrix{name = F, num. rows = 7, num. columns = 5, leading dimension = 7, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 7, 5]}, DenseMatrix{name = E, num. rows = 39, num. columns = 7, leading dimension = 39, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 39, 7]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(39, 5), bbox=BoundingBox(Range(0, 39), Range(0, 5)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 5), size=195, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 7), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(7, 5), bbox=BoundingBox(Range(0, 7), Range(0, 5)), stride=(1, 7), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(7, 5), size=35, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 39), Range(0, 5), Range(0, 7))), 'matrix_a': DenseMatrix{name = None, num. rows = 39, num. columns = 7, leading dimension = 39, direction = None, bbox = [0, 0, 39, 7]}, 'matrix_b': DenseMatrix{name = None, num. rows = 7, num. columns = 5, leading dimension = 7, direction = None, bbox = [0, 0, 7, 5]}, 'matrix_c': DenseMatrix{name = None, num. rows = 39, num. columns = 5, leading dimension = 39, direction = None, bbox = [0, 0, 39, 5]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(39, 5), bbox=BoundingBox(Range(0, 39), Range(0, 5)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 5), size=195, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(39, 7), bbox=BoundingBox(Range(0, 39), Range(0, 7)), stride=(1, 39), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(39, 7), size=273, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(7, 5), bbox=BoundingBox(Range(0, 7), Range(0, 5)), stride=(1, 7), align=<yateto.arch.Architecture object at 0x7f76605af6d0>),	  eqspp=dense(shape=(7, 5), size=35, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 39), Range(0, 5), Range(0, 7))), 'matrix_a': DenseMatrix{name = None, num. rows = 39, num. columns = 7, leading dimension = 39, direction = None, bbox = [0, 0, 39, 7]}, 'matrix_b': DenseMatrix{name = None, num. rows = 7, num. columns = 5, leading dimension = 7, direction = None, bbox = [0, 0, 7, 5]}, 'matrix_c': DenseMatrix{name = None, num. rows = 39, num. columns = 5, leading dimension = 39, direction = None, bbox = [0, 0, 39, 5]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d39_5_d7_5_d39_7__alpha_1_0_beta_1_0_p_p_p__73669be
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(3, 13, 5), bbox=BoundingBox(Range(0, 3), Range(0, 13), Range(0, 5)), stride=(1, 3, 39), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(3, 13, 5), size=195, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(5,), bbox=BoundingBox(Range(0, 5)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(5,), size=5, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(3, 13), size=39, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 5), 'p': Range(0, 13), 'k': Range(0, 3)}
)
i1:  [Range(0, 5)]
i2:  BoundingBox(Range(0, 5))
i1:  [Range(0, 3), Range(0, 13)]
i2:  BoundingBox(Range(0, 3), Range(0, 13))
i1:  [Range(0, 3), Range(0, 13), Range(0, 5)]
i2:  BoundingBox(Range(0, 3), Range(0, 13), Range(0, 5))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605b8610>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [5], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [3, 13], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [3, 13, 5], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = X, addressing = pointer_based, dimensions = [3, 13], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [3, 13, 5], dataflow direction = DataFlowDirection.SINK}, Tensor: { name = B, addressing = pointer_based, dimensions = [5], dataflow direction = DataFlowDirection.SOURCE}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: X, type: SymbolType.Batch, name: A, type: SymbolType.Batch, name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(3, 13, 5), bbox=BoundingBox(Range(0, 3), Range(0, 13), Range(0, 5)), stride=(1, 3, 39), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(3, 13, 5), size=195, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(5,), bbox=BoundingBox(Range(0, 5)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(5,), size=5, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(3, 13), bbox=BoundingBox(Range(0, 3), Range(0, 13)), stride=(1, 3), align=<yateto.arch.Architecture object at 0x7f76605e9a90>), eqspp=dense(shape=(3, 13), size=39, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 5), 'p': Range(0, 13), 'k': Range(0, 3)}
)
0 1 k
1 3 p
2 39 m
rankOffset2 =  2
rowsLeft =  1
rankOffset1 =  1
rowsLeft =  0
[1, 3, 39, 195]
[('rankOffset2', 3), ('rankOffset1', 1)]
[1, 3, 39, 195]
[('rankOffset2', 3), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d3_13_d3_13_5_d5__alpha_1_0_p_p_p__1be70e0
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>)
dense(shape=(13, 14), size=182, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 8), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(14, 8), bbox=BoundingBox(Range(0, 14), Range(0, 8)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(14, 8), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 13), Range(0, 8), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 8, leading dimension = 14, direction = None, bbox = [0, 0, 14, 8]}, 'matrix_c': DenseMatrix{name = None, num. rows = 13, num. columns = 8, leading dimension = 13, direction = None, bbox = [0, 0, 13, 8]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 8), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(14, 8), bbox=BoundingBox(Range(0, 14), Range(0, 8)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(14, 8), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 13), Range(0, 8), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 8, leading dimension = 14, direction = None, bbox = [0, 0, 14, 8]}, 'matrix_c': DenseMatrix{name = None, num. rows = 13, num. columns = 8, leading dimension = 13, direction = None, bbox = [0, 0, 13, 8]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 8), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(14, 8), bbox=BoundingBox(Range(0, 14), Range(0, 8)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(14, 8), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 13), Range(0, 8), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 8, leading dimension = 14, direction = None, bbox = [0, 0, 14, 8]}, 'matrix_c': DenseMatrix{name = None, num. rows = 13, num. columns = 8, leading dimension = 13, direction = None, bbox = [0, 0, 13, 8]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 13
	num. columns = 14
	bounding box = [0, 0, 13, 14]
	addressing = pointer_based
	num. actual rows = 13
	num. actual cols = 14
	leading dimension = 13
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 14
	num. columns = 8
	bounding box = [0, 0, 14, 8]
	addressing = pointer_based
	num. actual rows = 14
	num. actual cols = 8
	leading dimension = 14
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 13
	num. columns = 8
	bounding box = [0, 0, 13, 8]
	addressing = pointer_based
	num. actual rows = 13
	num. actual cols = 8
	leading dimension = 13
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = X, num. rows = 13, num. columns = 8, leading dimension = 13, direction = DataFlowDirection.SINK, bbox = [0, 0, 13, 8]}, DenseMatrix{name = D, num. rows = 14, num. columns = 8, leading dimension = 14, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 14, 8]}, DenseMatrix{name = C, num. rows = 13, num. columns = 14, leading dimension = 13, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 13, 14]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 8), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(14, 8), bbox=BoundingBox(Range(0, 14), Range(0, 8)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(14, 8), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 13), Range(0, 8), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 8, leading dimension = 14, direction = None, bbox = [0, 0, 14, 8]}, 'matrix_c': DenseMatrix{name = None, num. rows = 13, num. columns = 8, leading dimension = 13, direction = None, bbox = [0, 0, 13, 8]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 8), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(14, 8), bbox=BoundingBox(Range(0, 14), Range(0, 8)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605ebc90>),	  eqspp=dense(shape=(14, 8), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 13), Range(0, 8), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 8, leading dimension = 14, direction = None, bbox = [0, 0, 14, 8]}, 'matrix_c': DenseMatrix{name = None, num. rows = 13, num. columns = 8, leading dimension = 13, direction = None, bbox = [0, 0, 13, 8]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d13_8_d14_8_d13_14__alpha_1_0_beta_0_0_p_p_p__36f4d17
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>)
dense(shape=(104, 49), size=5096, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(104, 25), bbox=BoundingBox(Range(0, 104), Range(0, 25)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 25), size=2600, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 49), size=5096, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(49, 25), bbox=BoundingBox(Range(0, 49), Range(0, 25)), stride=(1, 49), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(49, 25), size=1225, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 104), Range(0, 25), Range(0, 49))), 'matrix_a': DenseMatrix{name = None, num. rows = 104, num. columns = 49, leading dimension = 104, direction = None, bbox = [0, 0, 104, 49]}, 'matrix_b': DenseMatrix{name = None, num. rows = 49, num. columns = 25, leading dimension = 49, direction = None, bbox = [0, 0, 49, 25]}, 'matrix_c': DenseMatrix{name = None, num. rows = 104, num. columns = 25, leading dimension = 104, direction = None, bbox = [0, 0, 104, 25]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(104, 25), bbox=BoundingBox(Range(0, 104), Range(0, 25)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 25), size=2600, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 49), size=5096, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(49, 25), bbox=BoundingBox(Range(0, 49), Range(0, 25)), stride=(1, 49), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(49, 25), size=1225, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 104), Range(0, 25), Range(0, 49))), 'matrix_a': DenseMatrix{name = None, num. rows = 104, num. columns = 49, leading dimension = 104, direction = None, bbox = [0, 0, 104, 49]}, 'matrix_b': DenseMatrix{name = None, num. rows = 49, num. columns = 25, leading dimension = 49, direction = None, bbox = [0, 0, 49, 25]}, 'matrix_c': DenseMatrix{name = None, num. rows = 104, num. columns = 25, leading dimension = 104, direction = None, bbox = [0, 0, 104, 25]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(104, 25), bbox=BoundingBox(Range(0, 104), Range(0, 25)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 25), size=2600, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 49), size=5096, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(49, 25), bbox=BoundingBox(Range(0, 49), Range(0, 25)), stride=(1, 49), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(49, 25), size=1225, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 104), Range(0, 25), Range(0, 49))), 'matrix_a': DenseMatrix{name = None, num. rows = 104, num. columns = 49, leading dimension = 104, direction = None, bbox = [0, 0, 104, 49]}, 'matrix_b': DenseMatrix{name = None, num. rows = 49, num. columns = 25, leading dimension = 49, direction = None, bbox = [0, 0, 49, 25]}, 'matrix_c': DenseMatrix{name = None, num. rows = 104, num. columns = 25, leading dimension = 104, direction = None, bbox = [0, 0, 104, 25]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 104
	num. columns = 49
	bounding box = [0, 0, 104, 49]
	addressing = pointer_based
	num. actual rows = 104
	num. actual cols = 49
	leading dimension = 104
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 49
	num. columns = 25
	bounding box = [0, 0, 49, 25]
	addressing = pointer_based
	num. actual rows = 49
	num. actual cols = 25
	leading dimension = 49
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 104
	num. columns = 25
	bounding box = [0, 0, 104, 25]
	addressing = pointer_based
	num. actual rows = 104
	num. actual cols = 25
	leading dimension = 104
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = F, num. rows = 49, num. columns = 25, leading dimension = 49, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 49, 25]}, DenseMatrix{name = A, num. rows = 104, num. columns = 25, leading dimension = 104, direction = DataFlowDirection.SINK, bbox = [0, 0, 104, 25]}, DenseMatrix{name = E, num. rows = 104, num. columns = 49, leading dimension = 104, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 104, 49]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(104, 25), bbox=BoundingBox(Range(0, 104), Range(0, 25)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 25), size=2600, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 49), size=5096, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(49, 25), bbox=BoundingBox(Range(0, 49), Range(0, 25)), stride=(1, 49), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(49, 25), size=1225, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 104), Range(0, 25), Range(0, 49))), 'matrix_a': DenseMatrix{name = None, num. rows = 104, num. columns = 49, leading dimension = 104, direction = None, bbox = [0, 0, 104, 49]}, 'matrix_b': DenseMatrix{name = None, num. rows = 49, num. columns = 25, leading dimension = 49, direction = None, bbox = [0, 0, 49, 25]}, 'matrix_c': DenseMatrix{name = None, num. rows = 104, num. columns = 25, leading dimension = 104, direction = None, bbox = [0, 0, 104, 25]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(104, 25), bbox=BoundingBox(Range(0, 104), Range(0, 25)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 25), size=2600, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(104, 49), bbox=BoundingBox(Range(0, 104), Range(0, 49)), stride=(1, 104), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(104, 49), size=5096, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(49, 25), bbox=BoundingBox(Range(0, 49), Range(0, 25)), stride=(1, 49), align=<yateto.arch.Architecture object at 0x7f76605e9a10>),	  eqspp=dense(shape=(49, 25), size=1225, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 104), Range(0, 25), Range(0, 49))), 'matrix_a': DenseMatrix{name = None, num. rows = 104, num. columns = 49, leading dimension = 104, direction = None, bbox = [0, 0, 104, 49]}, 'matrix_b': DenseMatrix{name = None, num. rows = 49, num. columns = 25, leading dimension = 49, direction = None, bbox = [0, 0, 49, 25]}, 'matrix_c': DenseMatrix{name = None, num. rows = 104, num. columns = 25, leading dimension = 104, direction = None, bbox = [0, 0, 104, 25]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d49_25_d104_25_d104_49__alpha_1_0_beta_1_0_p_p_p__0ead9e1
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(13, 8, 25), bbox=BoundingBox(Range(0, 13), Range(0, 8), Range(0, 25)), stride=(1, 13, 104), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(13, 8, 25), size=2600, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(25,), bbox=BoundingBox(Range(0, 25)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(25,), size=25, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(13, 8), size=104, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 25), 'p': Range(0, 8), 'k': Range(0, 13)}
)
i1:  [Range(0, 25)]
i2:  BoundingBox(Range(0, 25))
i1:  [Range(0, 13), Range(0, 8)]
i2:  BoundingBox(Range(0, 13), Range(0, 8))
i1:  [Range(0, 13), Range(0, 8), Range(0, 25)]
i2:  BoundingBox(Range(0, 13), Range(0, 8), Range(0, 25))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605ce490>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [25], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [13, 8], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [13, 8, 25], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = X, addressing = pointer_based, dimensions = [13, 8], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [13, 8, 25], dataflow direction = DataFlowDirection.SINK}, Tensor: { name = B, addressing = pointer_based, dimensions = [25], dataflow direction = DataFlowDirection.SOURCE}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: X, type: SymbolType.Batch, name: A, type: SymbolType.Batch, name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(13, 8, 25), bbox=BoundingBox(Range(0, 13), Range(0, 8), Range(0, 25)), stride=(1, 13, 104), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(13, 8, 25), size=2600, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(25,), bbox=BoundingBox(Range(0, 25)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(25,), size=25, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(13, 8), bbox=BoundingBox(Range(0, 13), Range(0, 8)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f76605e94d0>), eqspp=dense(shape=(13, 8), size=104, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 25), 'p': Range(0, 8), 'k': Range(0, 13)}
)
0 1 k
1 13 p
2 104 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 13, 104, 2600]
[('rankOffset2', 13), ('rankOffset1', 1)]
[1, 13, 104, 2600]
[('rankOffset2', 13), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d13_8_d13_8_25_d25__alpha_1_0_p_p_p__94637f6
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>)
dense(shape=(17, 9), size=153, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 49), size=833, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 9), size=153, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 49), bbox=BoundingBox(Range(0, 9), Range(0, 49)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(9, 49), size=441, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 17), Range(0, 49), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 17, num. columns = 9, leading dimension = 17, direction = None, bbox = [0, 0, 17, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 49, leading dimension = 9, direction = None, bbox = [0, 0, 9, 49]}, 'matrix_c': DenseMatrix{name = None, num. rows = 17, num. columns = 49, leading dimension = 17, direction = None, bbox = [0, 0, 17, 49]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 49), size=833, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 9), size=153, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 49), bbox=BoundingBox(Range(0, 9), Range(0, 49)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(9, 49), size=441, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 17), Range(0, 49), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 17, num. columns = 9, leading dimension = 17, direction = None, bbox = [0, 0, 17, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 49, leading dimension = 9, direction = None, bbox = [0, 0, 9, 49]}, 'matrix_c': DenseMatrix{name = None, num. rows = 17, num. columns = 49, leading dimension = 17, direction = None, bbox = [0, 0, 17, 49]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 49), size=833, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 9), size=153, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 49), bbox=BoundingBox(Range(0, 9), Range(0, 49)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(9, 49), size=441, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 17), Range(0, 49), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 17, num. columns = 9, leading dimension = 17, direction = None, bbox = [0, 0, 17, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 49, leading dimension = 9, direction = None, bbox = [0, 0, 9, 49]}, 'matrix_c': DenseMatrix{name = None, num. rows = 17, num. columns = 49, leading dimension = 17, direction = None, bbox = [0, 0, 17, 49]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 17
	num. columns = 9
	bounding box = [0, 0, 17, 9]
	addressing = pointer_based
	num. actual rows = 17
	num. actual cols = 9
	leading dimension = 17
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 9
	num. columns = 49
	bounding box = [0, 0, 9, 49]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 49
	leading dimension = 9
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 17
	num. columns = 49
	bounding box = [0, 0, 17, 49]
	addressing = pointer_based
	num. actual rows = 17
	num. actual cols = 49
	leading dimension = 17
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = C, num. rows = 17, num. columns = 9, leading dimension = 17, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 17, 9]}, DenseMatrix{name = X, num. rows = 17, num. columns = 49, leading dimension = 17, direction = DataFlowDirection.SINK, bbox = [0, 0, 17, 49]}, DenseMatrix{name = D, num. rows = 9, num. columns = 49, leading dimension = 9, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 9, 49]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 49), size=833, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 9), size=153, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 49), bbox=BoundingBox(Range(0, 9), Range(0, 49)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(9, 49), size=441, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 17), Range(0, 49), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 17, num. columns = 9, leading dimension = 17, direction = None, bbox = [0, 0, 17, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 49, leading dimension = 9, direction = None, bbox = [0, 0, 9, 49]}, 'matrix_c': DenseMatrix{name = None, num. rows = 17, num. columns = 49, leading dimension = 17, direction = None, bbox = [0, 0, 17, 49]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 49), size=833, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(17, 9), bbox=BoundingBox(Range(0, 17), Range(0, 9)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(17, 9), size=153, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 49), bbox=BoundingBox(Range(0, 9), Range(0, 49)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d2050>),	  eqspp=dense(shape=(9, 49), size=441, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 17), Range(0, 49), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 17, num. columns = 9, leading dimension = 17, direction = None, bbox = [0, 0, 17, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 49, leading dimension = 9, direction = None, bbox = [0, 0, 9, 49]}, 'matrix_c': DenseMatrix{name = None, num. rows = 17, num. columns = 49, leading dimension = 17, direction = None, bbox = [0, 0, 17, 49]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d17_9_d17_49_d9_49__alpha_1_0_beta_0_0_p_p_p__fdd54b0
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>)
dense(shape=(833, 14), size=11662, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(833, 24), bbox=BoundingBox(Range(0, 833), Range(0, 24)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 24), size=19992, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 14), size=11662, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 24), bbox=BoundingBox(Range(0, 14), Range(0, 24)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(14, 24), size=336, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 833), Range(0, 24), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 833, num. columns = 14, leading dimension = 833, direction = None, bbox = [0, 0, 833, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 24, leading dimension = 14, direction = None, bbox = [0, 0, 14, 24]}, 'matrix_c': DenseMatrix{name = None, num. rows = 833, num. columns = 24, leading dimension = 833, direction = None, bbox = [0, 0, 833, 24]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(833, 24), bbox=BoundingBox(Range(0, 833), Range(0, 24)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 24), size=19992, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 14), size=11662, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 24), bbox=BoundingBox(Range(0, 14), Range(0, 24)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(14, 24), size=336, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 833), Range(0, 24), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 833, num. columns = 14, leading dimension = 833, direction = None, bbox = [0, 0, 833, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 24, leading dimension = 14, direction = None, bbox = [0, 0, 14, 24]}, 'matrix_c': DenseMatrix{name = None, num. rows = 833, num. columns = 24, leading dimension = 833, direction = None, bbox = [0, 0, 833, 24]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(833, 24), bbox=BoundingBox(Range(0, 833), Range(0, 24)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 24), size=19992, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 14), size=11662, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 24), bbox=BoundingBox(Range(0, 14), Range(0, 24)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(14, 24), size=336, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 833), Range(0, 24), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 833, num. columns = 14, leading dimension = 833, direction = None, bbox = [0, 0, 833, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 24, leading dimension = 14, direction = None, bbox = [0, 0, 14, 24]}, 'matrix_c': DenseMatrix{name = None, num. rows = 833, num. columns = 24, leading dimension = 833, direction = None, bbox = [0, 0, 833, 24]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 833
	num. columns = 14
	bounding box = [0, 0, 833, 14]
	addressing = pointer_based
	num. actual rows = 833
	num. actual cols = 14
	leading dimension = 833
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 14
	num. columns = 24
	bounding box = [0, 0, 14, 24]
	addressing = pointer_based
	num. actual rows = 14
	num. actual cols = 24
	leading dimension = 14
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 833
	num. columns = 24
	bounding box = [0, 0, 833, 24]
	addressing = pointer_based
	num. actual rows = 833
	num. actual cols = 24
	leading dimension = 833
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = F, num. rows = 14, num. columns = 24, leading dimension = 14, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 14, 24]}, DenseMatrix{name = E, num. rows = 833, num. columns = 14, leading dimension = 833, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 833, 14]}, DenseMatrix{name = A, num. rows = 833, num. columns = 24, leading dimension = 833, direction = DataFlowDirection.SINK, bbox = [0, 0, 833, 24]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(833, 24), bbox=BoundingBox(Range(0, 833), Range(0, 24)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 24), size=19992, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 14), size=11662, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 24), bbox=BoundingBox(Range(0, 14), Range(0, 24)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(14, 24), size=336, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 833), Range(0, 24), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 833, num. columns = 14, leading dimension = 833, direction = None, bbox = [0, 0, 833, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 24, leading dimension = 14, direction = None, bbox = [0, 0, 14, 24]}, 'matrix_c': DenseMatrix{name = None, num. rows = 833, num. columns = 24, leading dimension = 833, direction = None, bbox = [0, 0, 833, 24]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(833, 24), bbox=BoundingBox(Range(0, 833), Range(0, 24)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 24), size=19992, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(833, 14), bbox=BoundingBox(Range(0, 833), Range(0, 14)), stride=(1, 833), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(833, 14), size=11662, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 24), bbox=BoundingBox(Range(0, 14), Range(0, 24)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f766bf66ad0>),	  eqspp=dense(shape=(14, 24), size=336, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 833), Range(0, 24), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 833, num. columns = 14, leading dimension = 833, direction = None, bbox = [0, 0, 833, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 24, leading dimension = 14, direction = None, bbox = [0, 0, 14, 24]}, 'matrix_c': DenseMatrix{name = None, num. rows = 833, num. columns = 24, leading dimension = 833, direction = None, bbox = [0, 0, 833, 24]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d14_24_d833_14_d833_24__alpha_1_0_beta_1_0_p_p_p__a742de0
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(17, 49, 24), bbox=BoundingBox(Range(0, 17), Range(0, 49), Range(0, 24)), stride=(1, 17, 833), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(17, 49, 24), size=19992, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(24,), bbox=BoundingBox(Range(0, 24)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(24,), size=24, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(17, 49), size=833, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 24), 'p': Range(0, 49), 'k': Range(0, 17)}
)
i1:  [Range(0, 24)]
i2:  BoundingBox(Range(0, 24))
i1:  [Range(0, 17), Range(0, 49)]
i2:  BoundingBox(Range(0, 17), Range(0, 49))
i1:  [Range(0, 17), Range(0, 49), Range(0, 24)]
i2:  BoundingBox(Range(0, 17), Range(0, 49), Range(0, 24))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605f30d0>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [24], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [17, 49], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [17, 49, 24], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = X, addressing = pointer_based, dimensions = [17, 49], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = B, addressing = pointer_based, dimensions = [24], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [17, 49, 24], dataflow direction = DataFlowDirection.SINK}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: X, type: SymbolType.Batch, name: B, type: SymbolType.Batch, name: A, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: B, type: SymbolType.Batch
name: A, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(17, 49, 24), bbox=BoundingBox(Range(0, 17), Range(0, 49), Range(0, 24)), stride=(1, 17, 833), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(17, 49, 24), size=19992, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(24,), bbox=BoundingBox(Range(0, 24)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(24,), size=24, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(17, 49), bbox=BoundingBox(Range(0, 17), Range(0, 49)), stride=(1, 17), align=<yateto.arch.Architecture object at 0x7f76605f4950>), eqspp=dense(shape=(17, 49), size=833, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 24), 'p': Range(0, 49), 'k': Range(0, 17)}
)
0 1 k
1 17 p
2 833 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 17, 833, 19992]
[('rankOffset2', 17), ('rankOffset1', 1)]
[1, 17, 833, 19992]
[('rankOffset2', 17), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d17_49_d24_d17_49_24__alpha_1_0_p_p_p__675bce3
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>)
dense(shape=(9, 9), size=81, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 9), size=81, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 83), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 9, leading dimension = 9, direction = None, bbox = [0, 0, 9, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 9), size=81, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 83), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 9, leading dimension = 9, direction = None, bbox = [0, 0, 9, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 9), size=81, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 83), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 9, leading dimension = 9, direction = None, bbox = [0, 0, 9, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 9
	num. columns = 9
	bounding box = [0, 0, 9, 9]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 9
	leading dimension = 9
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 9
	num. columns = 83
	bounding box = [0, 0, 9, 83]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 83
	leading dimension = 9
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 9
	num. columns = 83
	bounding box = [0, 0, 9, 83]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 83
	leading dimension = 9
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = C, num. rows = 9, num. columns = 9, leading dimension = 9, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 9, 9]}, DenseMatrix{name = D, num. rows = 9, num. columns = 83, leading dimension = 9, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 9, 83]}, DenseMatrix{name = X, num. rows = 9, num. columns = 83, leading dimension = 9, direction = DataFlowDirection.SINK, bbox = [0, 0, 9, 83]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 9), size=81, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 83), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 9, leading dimension = 9, direction = None, bbox = [0, 0, 9, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 9), bbox=BoundingBox(Range(0, 9), Range(0, 9)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 9), size=81, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76605d3f10>),	  eqspp=dense(shape=(9, 83), size=747, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 83), Range(0, 9))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 9, leading dimension = 9, direction = None, bbox = [0, 0, 9, 9]}, 'matrix_b': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 83, leading dimension = 9, direction = None, bbox = [0, 0, 9, 83]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d9_9_d9_83_d9_83__alpha_1_0_beta_0_0_p_p_p__d68bdf0
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>)
dense(shape=(747, 14), size=10458, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(747, 46), bbox=BoundingBox(Range(0, 747), Range(0, 46)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 46), size=34362, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 14), size=10458, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 46), bbox=BoundingBox(Range(0, 14), Range(0, 46)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(14, 46), size=644, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 747), Range(0, 46), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 747, num. columns = 14, leading dimension = 747, direction = None, bbox = [0, 0, 747, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 46, leading dimension = 14, direction = None, bbox = [0, 0, 14, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 747, num. columns = 46, leading dimension = 747, direction = None, bbox = [0, 0, 747, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(747, 46), bbox=BoundingBox(Range(0, 747), Range(0, 46)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 46), size=34362, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 14), size=10458, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 46), bbox=BoundingBox(Range(0, 14), Range(0, 46)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(14, 46), size=644, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 747), Range(0, 46), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 747, num. columns = 14, leading dimension = 747, direction = None, bbox = [0, 0, 747, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 46, leading dimension = 14, direction = None, bbox = [0, 0, 14, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 747, num. columns = 46, leading dimension = 747, direction = None, bbox = [0, 0, 747, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(747, 46), bbox=BoundingBox(Range(0, 747), Range(0, 46)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 46), size=34362, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 14), size=10458, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 46), bbox=BoundingBox(Range(0, 14), Range(0, 46)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(14, 46), size=644, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 747), Range(0, 46), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 747, num. columns = 14, leading dimension = 747, direction = None, bbox = [0, 0, 747, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 46, leading dimension = 14, direction = None, bbox = [0, 0, 14, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 747, num. columns = 46, leading dimension = 747, direction = None, bbox = [0, 0, 747, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 747
	num. columns = 14
	bounding box = [0, 0, 747, 14]
	addressing = pointer_based
	num. actual rows = 747
	num. actual cols = 14
	leading dimension = 747
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 14
	num. columns = 46
	bounding box = [0, 0, 14, 46]
	addressing = pointer_based
	num. actual rows = 14
	num. actual cols = 46
	leading dimension = 14
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 747
	num. columns = 46
	bounding box = [0, 0, 747, 46]
	addressing = pointer_based
	num. actual rows = 747
	num. actual cols = 46
	leading dimension = 747
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = E, num. rows = 747, num. columns = 14, leading dimension = 747, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 747, 14]}, DenseMatrix{name = F, num. rows = 14, num. columns = 46, leading dimension = 14, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 14, 46]}, DenseMatrix{name = A, num. rows = 747, num. columns = 46, leading dimension = 747, direction = DataFlowDirection.SINK, bbox = [0, 0, 747, 46]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(747, 46), bbox=BoundingBox(Range(0, 747), Range(0, 46)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 46), size=34362, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 14), size=10458, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 46), bbox=BoundingBox(Range(0, 14), Range(0, 46)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(14, 46), size=644, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 747), Range(0, 46), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 747, num. columns = 14, leading dimension = 747, direction = None, bbox = [0, 0, 747, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 46, leading dimension = 14, direction = None, bbox = [0, 0, 14, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 747, num. columns = 46, leading dimension = 747, direction = None, bbox = [0, 0, 747, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(747, 46), bbox=BoundingBox(Range(0, 747), Range(0, 46)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 46), size=34362, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(747, 14), bbox=BoundingBox(Range(0, 747), Range(0, 14)), stride=(1, 747), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(747, 14), size=10458, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(14, 46), bbox=BoundingBox(Range(0, 14), Range(0, 46)), stride=(1, 14), align=<yateto.arch.Architecture object at 0x7f76605e8350>),	  eqspp=dense(shape=(14, 46), size=644, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 747), Range(0, 46), Range(0, 14))), 'matrix_a': DenseMatrix{name = None, num. rows = 747, num. columns = 14, leading dimension = 747, direction = None, bbox = [0, 0, 747, 14]}, 'matrix_b': DenseMatrix{name = None, num. rows = 14, num. columns = 46, leading dimension = 14, direction = None, bbox = [0, 0, 14, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 747, num. columns = 46, leading dimension = 747, direction = None, bbox = [0, 0, 747, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d747_14_d14_46_d747_46__alpha_1_0_beta_1_0_p_p_p__864b35e
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(9, 83, 46), bbox=BoundingBox(Range(0, 9), Range(0, 83), Range(0, 46)), stride=(1, 9, 747), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(9, 83, 46), size=34362, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(46,), bbox=BoundingBox(Range(0, 46)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(46,), size=46, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(9, 83), size=747, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 46), 'p': Range(0, 83), 'k': Range(0, 9)}
)
i1:  [Range(0, 46)]
i2:  BoundingBox(Range(0, 46))
i1:  [Range(0, 9), Range(0, 83)]
i2:  BoundingBox(Range(0, 9), Range(0, 83))
i1:  [Range(0, 9), Range(0, 83), Range(0, 46)]
i2:  BoundingBox(Range(0, 9), Range(0, 83), Range(0, 46))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605f5fd0>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [46], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [9, 83], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [9, 83, 46], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = B, addressing = pointer_based, dimensions = [46], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = X, addressing = pointer_based, dimensions = [9, 83], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [9, 83, 46], dataflow direction = DataFlowDirection.SINK}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: B, type: SymbolType.Batch, name: X, type: SymbolType.Batch, name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(9, 83, 46), bbox=BoundingBox(Range(0, 9), Range(0, 83), Range(0, 46)), stride=(1, 9, 747), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(9, 83, 46), size=34362, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(46,), bbox=BoundingBox(Range(0, 46)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(46,), size=46, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(9, 83), bbox=BoundingBox(Range(0, 9), Range(0, 83)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f766c0d6450>), eqspp=dense(shape=(9, 83), size=747, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 46), 'p': Range(0, 83), 'k': Range(0, 9)}
)
0 1 k
1 9 p
2 747 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 9, 747, 34362]
[('rankOffset2', 9), ('rankOffset1', 1)]
[1, 9, 747, 34362]
[('rankOffset2', 9), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d46_d9_83_d9_83_46__alpha_1_0_p_p_p__d9bfdc5
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>)
dense(shape=(8, 35), size=280, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 31), size=248, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 35), size=280, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(35, 31), bbox=BoundingBox(Range(0, 35), Range(0, 31)), stride=(1, 35), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(35, 31), size=1085, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 31), Range(0, 35))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 35, leading dimension = 8, direction = None, bbox = [0, 0, 8, 35]}, 'matrix_b': DenseMatrix{name = None, num. rows = 35, num. columns = 31, leading dimension = 35, direction = None, bbox = [0, 0, 35, 31]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 31, leading dimension = 8, direction = None, bbox = [0, 0, 8, 31]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 31), size=248, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 35), size=280, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(35, 31), bbox=BoundingBox(Range(0, 35), Range(0, 31)), stride=(1, 35), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(35, 31), size=1085, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 31), Range(0, 35))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 35, leading dimension = 8, direction = None, bbox = [0, 0, 8, 35]}, 'matrix_b': DenseMatrix{name = None, num. rows = 35, num. columns = 31, leading dimension = 35, direction = None, bbox = [0, 0, 35, 31]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 31, leading dimension = 8, direction = None, bbox = [0, 0, 8, 31]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 31), size=248, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 35), size=280, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(35, 31), bbox=BoundingBox(Range(0, 35), Range(0, 31)), stride=(1, 35), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(35, 31), size=1085, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 31), Range(0, 35))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 35, leading dimension = 8, direction = None, bbox = [0, 0, 8, 35]}, 'matrix_b': DenseMatrix{name = None, num. rows = 35, num. columns = 31, leading dimension = 35, direction = None, bbox = [0, 0, 35, 31]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 31, leading dimension = 8, direction = None, bbox = [0, 0, 8, 31]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 8
	num. columns = 35
	bounding box = [0, 0, 8, 35]
	addressing = pointer_based
	num. actual rows = 8
	num. actual cols = 35
	leading dimension = 8
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 35
	num. columns = 31
	bounding box = [0, 0, 35, 31]
	addressing = pointer_based
	num. actual rows = 35
	num. actual cols = 31
	leading dimension = 35
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 8
	num. columns = 31
	bounding box = [0, 0, 8, 31]
	addressing = pointer_based
	num. actual rows = 8
	num. actual cols = 31
	leading dimension = 8
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = X, num. rows = 8, num. columns = 31, leading dimension = 8, direction = DataFlowDirection.SINK, bbox = [0, 0, 8, 31]}, DenseMatrix{name = D, num. rows = 35, num. columns = 31, leading dimension = 35, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 35, 31]}, DenseMatrix{name = C, num. rows = 8, num. columns = 35, leading dimension = 8, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 8, 35]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 31), size=248, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 35), size=280, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(35, 31), bbox=BoundingBox(Range(0, 35), Range(0, 31)), stride=(1, 35), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(35, 31), size=1085, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 31), Range(0, 35))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 35, leading dimension = 8, direction = None, bbox = [0, 0, 8, 35]}, 'matrix_b': DenseMatrix{name = None, num. rows = 35, num. columns = 31, leading dimension = 35, direction = None, bbox = [0, 0, 35, 31]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 31, leading dimension = 8, direction = None, bbox = [0, 0, 8, 31]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 31), size=248, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 35), bbox=BoundingBox(Range(0, 8), Range(0, 35)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(8, 35), size=280, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(35, 31), bbox=BoundingBox(Range(0, 35), Range(0, 31)), stride=(1, 35), align=<yateto.arch.Architecture object at 0x7f76605db350>),	  eqspp=dense(shape=(35, 31), size=1085, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 31), Range(0, 35))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 35, leading dimension = 8, direction = None, bbox = [0, 0, 8, 35]}, 'matrix_b': DenseMatrix{name = None, num. rows = 35, num. columns = 31, leading dimension = 35, direction = None, bbox = [0, 0, 35, 31]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 31, leading dimension = 8, direction = None, bbox = [0, 0, 8, 31]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d8_31_d35_31_d8_35__alpha_1_0_beta_0_0_p_p_p__4b8af38
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>)
dense(shape=(248, 27), size=6696, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(248, 9), bbox=BoundingBox(Range(0, 248), Range(0, 9)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 9), size=2232, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 27), size=6696, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(27, 9), bbox=BoundingBox(Range(0, 27), Range(0, 9)), stride=(1, 27), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(27, 9), size=243, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 248), Range(0, 9), Range(0, 27))), 'matrix_a': DenseMatrix{name = None, num. rows = 248, num. columns = 27, leading dimension = 248, direction = None, bbox = [0, 0, 248, 27]}, 'matrix_b': DenseMatrix{name = None, num. rows = 27, num. columns = 9, leading dimension = 27, direction = None, bbox = [0, 0, 27, 9]}, 'matrix_c': DenseMatrix{name = None, num. rows = 248, num. columns = 9, leading dimension = 248, direction = None, bbox = [0, 0, 248, 9]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(248, 9), bbox=BoundingBox(Range(0, 248), Range(0, 9)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 9), size=2232, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 27), size=6696, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(27, 9), bbox=BoundingBox(Range(0, 27), Range(0, 9)), stride=(1, 27), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(27, 9), size=243, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 248), Range(0, 9), Range(0, 27))), 'matrix_a': DenseMatrix{name = None, num. rows = 248, num. columns = 27, leading dimension = 248, direction = None, bbox = [0, 0, 248, 27]}, 'matrix_b': DenseMatrix{name = None, num. rows = 27, num. columns = 9, leading dimension = 27, direction = None, bbox = [0, 0, 27, 9]}, 'matrix_c': DenseMatrix{name = None, num. rows = 248, num. columns = 9, leading dimension = 248, direction = None, bbox = [0, 0, 248, 9]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(248, 9), bbox=BoundingBox(Range(0, 248), Range(0, 9)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 9), size=2232, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 27), size=6696, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(27, 9), bbox=BoundingBox(Range(0, 27), Range(0, 9)), stride=(1, 27), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(27, 9), size=243, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 248), Range(0, 9), Range(0, 27))), 'matrix_a': DenseMatrix{name = None, num. rows = 248, num. columns = 27, leading dimension = 248, direction = None, bbox = [0, 0, 248, 27]}, 'matrix_b': DenseMatrix{name = None, num. rows = 27, num. columns = 9, leading dimension = 27, direction = None, bbox = [0, 0, 27, 9]}, 'matrix_c': DenseMatrix{name = None, num. rows = 248, num. columns = 9, leading dimension = 248, direction = None, bbox = [0, 0, 248, 9]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 248
	num. columns = 27
	bounding box = [0, 0, 248, 27]
	addressing = pointer_based
	num. actual rows = 248
	num. actual cols = 27
	leading dimension = 248
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 27
	num. columns = 9
	bounding box = [0, 0, 27, 9]
	addressing = pointer_based
	num. actual rows = 27
	num. actual cols = 9
	leading dimension = 27
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 248
	num. columns = 9
	bounding box = [0, 0, 248, 9]
	addressing = pointer_based
	num. actual rows = 248
	num. actual cols = 9
	leading dimension = 248
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = F, num. rows = 27, num. columns = 9, leading dimension = 27, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 27, 9]}, DenseMatrix{name = E, num. rows = 248, num. columns = 27, leading dimension = 248, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 248, 27]}, DenseMatrix{name = A, num. rows = 248, num. columns = 9, leading dimension = 248, direction = DataFlowDirection.SINK, bbox = [0, 0, 248, 9]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(248, 9), bbox=BoundingBox(Range(0, 248), Range(0, 9)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 9), size=2232, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 27), size=6696, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(27, 9), bbox=BoundingBox(Range(0, 27), Range(0, 9)), stride=(1, 27), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(27, 9), size=243, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 248), Range(0, 9), Range(0, 27))), 'matrix_a': DenseMatrix{name = None, num. rows = 248, num. columns = 27, leading dimension = 248, direction = None, bbox = [0, 0, 248, 27]}, 'matrix_b': DenseMatrix{name = None, num. rows = 27, num. columns = 9, leading dimension = 27, direction = None, bbox = [0, 0, 27, 9]}, 'matrix_c': DenseMatrix{name = None, num. rows = 248, num. columns = 9, leading dimension = 248, direction = None, bbox = [0, 0, 248, 9]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(248, 9), bbox=BoundingBox(Range(0, 248), Range(0, 9)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 9), size=2232, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(248, 27), bbox=BoundingBox(Range(0, 248), Range(0, 27)), stride=(1, 248), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(248, 27), size=6696, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(27, 9), bbox=BoundingBox(Range(0, 27), Range(0, 9)), stride=(1, 27), align=<yateto.arch.Architecture object at 0x7f76605f0710>),	  eqspp=dense(shape=(27, 9), size=243, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 248), Range(0, 9), Range(0, 27))), 'matrix_a': DenseMatrix{name = None, num. rows = 248, num. columns = 27, leading dimension = 248, direction = None, bbox = [0, 0, 248, 27]}, 'matrix_b': DenseMatrix{name = None, num. rows = 27, num. columns = 9, leading dimension = 27, direction = None, bbox = [0, 0, 27, 9]}, 'matrix_c': DenseMatrix{name = None, num. rows = 248, num. columns = 9, leading dimension = 248, direction = None, bbox = [0, 0, 248, 9]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d27_9_d248_27_d248_9__alpha_1_0_beta_1_0_p_p_p__b05aeb4
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(8, 31, 9), bbox=BoundingBox(Range(0, 8), Range(0, 31), Range(0, 9)), stride=(1, 8, 248), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(8, 31, 9), size=2232, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(9,), bbox=BoundingBox(Range(0, 9)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(9,), size=9, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(8, 31), size=248, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 9), 'p': Range(0, 31), 'k': Range(0, 8)}
)
i1:  [Range(0, 9)]
i2:  BoundingBox(Range(0, 9))
i1:  [Range(0, 8), Range(0, 31)]
i2:  BoundingBox(Range(0, 8), Range(0, 31))
i1:  [Range(0, 8), Range(0, 31), Range(0, 9)]
i2:  BoundingBox(Range(0, 8), Range(0, 31), Range(0, 9))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605f4510>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [9], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [8, 31], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [8, 31, 9], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = A, addressing = pointer_based, dimensions = [8, 31, 9], dataflow direction = DataFlowDirection.SINK}, Tensor: { name = X, addressing = pointer_based, dimensions = [8, 31], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = B, addressing = pointer_based, dimensions = [9], dataflow direction = DataFlowDirection.SOURCE}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: A, type: SymbolType.Batch, name: X, type: SymbolType.Batch, name: B, type: SymbolType.Batch
name: A, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: B, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(8, 31, 9), bbox=BoundingBox(Range(0, 8), Range(0, 31), Range(0, 9)), stride=(1, 8, 248), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(8, 31, 9), size=2232, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(9,), bbox=BoundingBox(Range(0, 9)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(9,), size=9, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(8, 31), bbox=BoundingBox(Range(0, 8), Range(0, 31)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f76605f24d0>), eqspp=dense(shape=(8, 31), size=248, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 9), 'p': Range(0, 31), 'k': Range(0, 8)}
)
0 1 k
1 8 p
2 248 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 8, 248, 2232]
[('rankOffset2', 8), ('rankOffset1', 1)]
[1, 8, 248, 2232]
[('rankOffset2', 8), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d8_31_9_d8_31_d9__alpha_1_0_p_p_p__b460397
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>)
dense(shape=(10, 10), size=100, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 10), size=100, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 10), Range(0, 17), Range(0, 10))), 'matrix_a': DenseMatrix{name = None, num. rows = 10, num. columns = 10, leading dimension = 10, direction = None, bbox = [0, 0, 10, 10]}, 'matrix_b': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 10), size=100, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 10), Range(0, 17), Range(0, 10))), 'matrix_a': DenseMatrix{name = None, num. rows = 10, num. columns = 10, leading dimension = 10, direction = None, bbox = [0, 0, 10, 10]}, 'matrix_b': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 10), size=100, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 10), Range(0, 17), Range(0, 10))), 'matrix_a': DenseMatrix{name = None, num. rows = 10, num. columns = 10, leading dimension = 10, direction = None, bbox = [0, 0, 10, 10]}, 'matrix_b': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 10
	num. columns = 10
	bounding box = [0, 0, 10, 10]
	addressing = pointer_based
	num. actual rows = 10
	num. actual cols = 10
	leading dimension = 10
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 10
	num. columns = 17
	bounding box = [0, 0, 10, 17]
	addressing = pointer_based
	num. actual rows = 10
	num. actual cols = 17
	leading dimension = 10
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 10
	num. columns = 17
	bounding box = [0, 0, 10, 17]
	addressing = pointer_based
	num. actual rows = 10
	num. actual cols = 17
	leading dimension = 10
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = X, num. rows = 10, num. columns = 17, leading dimension = 10, direction = DataFlowDirection.SINK, bbox = [0, 0, 10, 17]}, DenseMatrix{name = C, num. rows = 10, num. columns = 10, leading dimension = 10, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 10, 10]}, DenseMatrix{name = D, num. rows = 10, num. columns = 17, leading dimension = 10, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 10, 17]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 10), size=100, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 10), Range(0, 17), Range(0, 10))), 'matrix_a': DenseMatrix{name = None, num. rows = 10, num. columns = 10, leading dimension = 10, direction = None, bbox = [0, 0, 10, 10]}, 'matrix_b': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(10, 10), bbox=BoundingBox(Range(0, 10), Range(0, 10)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 10), size=100, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605f77d0>),	  eqspp=dense(shape=(10, 17), size=170, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 10), Range(0, 17), Range(0, 10))), 'matrix_a': DenseMatrix{name = None, num. rows = 10, num. columns = 10, leading dimension = 10, direction = None, bbox = [0, 0, 10, 10]}, 'matrix_b': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 10, num. columns = 17, leading dimension = 10, direction = None, bbox = [0, 0, 10, 17]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d10_17_d10_10_d10_17__alpha_1_0_beta_0_0_p_p_p__c2a3c5d
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>)
dense(shape=(170, 32), size=5440, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(170, 45), bbox=BoundingBox(Range(0, 170), Range(0, 45)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 45), size=7650, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 32), size=5440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(32, 45), bbox=BoundingBox(Range(0, 32), Range(0, 45)), stride=(1, 32), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(32, 45), size=1440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 170), Range(0, 45), Range(0, 32))), 'matrix_a': DenseMatrix{name = None, num. rows = 170, num. columns = 32, leading dimension = 170, direction = None, bbox = [0, 0, 170, 32]}, 'matrix_b': DenseMatrix{name = None, num. rows = 32, num. columns = 45, leading dimension = 32, direction = None, bbox = [0, 0, 32, 45]}, 'matrix_c': DenseMatrix{name = None, num. rows = 170, num. columns = 45, leading dimension = 170, direction = None, bbox = [0, 0, 170, 45]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(170, 45), bbox=BoundingBox(Range(0, 170), Range(0, 45)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 45), size=7650, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 32), size=5440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(32, 45), bbox=BoundingBox(Range(0, 32), Range(0, 45)), stride=(1, 32), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(32, 45), size=1440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 170), Range(0, 45), Range(0, 32))), 'matrix_a': DenseMatrix{name = None, num. rows = 170, num. columns = 32, leading dimension = 170, direction = None, bbox = [0, 0, 170, 32]}, 'matrix_b': DenseMatrix{name = None, num. rows = 32, num. columns = 45, leading dimension = 32, direction = None, bbox = [0, 0, 32, 45]}, 'matrix_c': DenseMatrix{name = None, num. rows = 170, num. columns = 45, leading dimension = 170, direction = None, bbox = [0, 0, 170, 45]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(170, 45), bbox=BoundingBox(Range(0, 170), Range(0, 45)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 45), size=7650, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 32), size=5440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(32, 45), bbox=BoundingBox(Range(0, 32), Range(0, 45)), stride=(1, 32), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(32, 45), size=1440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 170), Range(0, 45), Range(0, 32))), 'matrix_a': DenseMatrix{name = None, num. rows = 170, num. columns = 32, leading dimension = 170, direction = None, bbox = [0, 0, 170, 32]}, 'matrix_b': DenseMatrix{name = None, num. rows = 32, num. columns = 45, leading dimension = 32, direction = None, bbox = [0, 0, 32, 45]}, 'matrix_c': DenseMatrix{name = None, num. rows = 170, num. columns = 45, leading dimension = 170, direction = None, bbox = [0, 0, 170, 45]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 170
	num. columns = 32
	bounding box = [0, 0, 170, 32]
	addressing = pointer_based
	num. actual rows = 170
	num. actual cols = 32
	leading dimension = 170
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 32
	num. columns = 45
	bounding box = [0, 0, 32, 45]
	addressing = pointer_based
	num. actual rows = 32
	num. actual cols = 45
	leading dimension = 32
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 170
	num. columns = 45
	bounding box = [0, 0, 170, 45]
	addressing = pointer_based
	num. actual rows = 170
	num. actual cols = 45
	leading dimension = 170
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = A, num. rows = 170, num. columns = 45, leading dimension = 170, direction = DataFlowDirection.SINK, bbox = [0, 0, 170, 45]}, DenseMatrix{name = F, num. rows = 32, num. columns = 45, leading dimension = 32, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 32, 45]}, DenseMatrix{name = E, num. rows = 170, num. columns = 32, leading dimension = 170, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 170, 32]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(170, 45), bbox=BoundingBox(Range(0, 170), Range(0, 45)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 45), size=7650, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 32), size=5440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(32, 45), bbox=BoundingBox(Range(0, 32), Range(0, 45)), stride=(1, 32), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(32, 45), size=1440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 170), Range(0, 45), Range(0, 32))), 'matrix_a': DenseMatrix{name = None, num. rows = 170, num. columns = 32, leading dimension = 170, direction = None, bbox = [0, 0, 170, 32]}, 'matrix_b': DenseMatrix{name = None, num. rows = 32, num. columns = 45, leading dimension = 32, direction = None, bbox = [0, 0, 32, 45]}, 'matrix_c': DenseMatrix{name = None, num. rows = 170, num. columns = 45, leading dimension = 170, direction = None, bbox = [0, 0, 170, 45]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(170, 45), bbox=BoundingBox(Range(0, 170), Range(0, 45)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 45), size=7650, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(170, 32), bbox=BoundingBox(Range(0, 170), Range(0, 32)), stride=(1, 170), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(170, 32), size=5440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(32, 45), bbox=BoundingBox(Range(0, 32), Range(0, 45)), stride=(1, 32), align=<yateto.arch.Architecture object at 0x7f76605d2890>),	  eqspp=dense(shape=(32, 45), size=1440, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 170), Range(0, 45), Range(0, 32))), 'matrix_a': DenseMatrix{name = None, num. rows = 170, num. columns = 32, leading dimension = 170, direction = None, bbox = [0, 0, 170, 32]}, 'matrix_b': DenseMatrix{name = None, num. rows = 32, num. columns = 45, leading dimension = 32, direction = None, bbox = [0, 0, 32, 45]}, 'matrix_c': DenseMatrix{name = None, num. rows = 170, num. columns = 45, leading dimension = 170, direction = None, bbox = [0, 0, 170, 45]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d170_45_d32_45_d170_32__alpha_1_0_beta_1_0_p_p_p__3db44b4
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(10, 17, 45), bbox=BoundingBox(Range(0, 10), Range(0, 17), Range(0, 45)), stride=(1, 10, 170), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(10, 17, 45), size=7650, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(45,), bbox=BoundingBox(Range(0, 45)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(45,), size=45, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(10, 17), size=170, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 45), 'p': Range(0, 17), 'k': Range(0, 10)}
)
i1:  [Range(0, 45)]
i2:  BoundingBox(Range(0, 45))
i1:  [Range(0, 10), Range(0, 17)]
i2:  BoundingBox(Range(0, 10), Range(0, 17))
i1:  [Range(0, 10), Range(0, 17), Range(0, 45)]
i2:  BoundingBox(Range(0, 10), Range(0, 17), Range(0, 45))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f7658386410>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [45], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [10, 17], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [10, 17, 45], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = X, addressing = pointer_based, dimensions = [10, 17], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [10, 17, 45], dataflow direction = DataFlowDirection.SINK}, Tensor: { name = B, addressing = pointer_based, dimensions = [45], dataflow direction = DataFlowDirection.SOURCE}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: X, type: SymbolType.Batch, name: A, type: SymbolType.Batch, name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(10, 17, 45), bbox=BoundingBox(Range(0, 10), Range(0, 17), Range(0, 45)), stride=(1, 10, 170), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(10, 17, 45), size=7650, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(45,), bbox=BoundingBox(Range(0, 45)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(45,), size=45, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(10, 17), bbox=BoundingBox(Range(0, 10), Range(0, 17)), stride=(1, 10), align=<yateto.arch.Architecture object at 0x7f76605d0a50>), eqspp=dense(shape=(10, 17), size=170, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 45), 'p': Range(0, 17), 'k': Range(0, 10)}
)
0 1 k
1 10 p
2 170 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 10, 170, 7650]
[('rankOffset2', 10), ('rankOffset1', 1)]
[1, 10, 170, 7650]
[('rankOffset2', 10), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d10_17_d10_17_45_d45__alpha_1_0_p_p_p__3a3573a
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>)
dense(shape=(8, 13), size=104, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 14), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 13), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 14), Range(0, 13))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 13, leading dimension = 8, direction = None, bbox = [0, 0, 8, 13]}, 'matrix_b': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 14, leading dimension = 8, direction = None, bbox = [0, 0, 8, 14]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 14), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 13), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 14), Range(0, 13))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 13, leading dimension = 8, direction = None, bbox = [0, 0, 8, 13]}, 'matrix_b': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 14, leading dimension = 8, direction = None, bbox = [0, 0, 8, 14]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 14), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 13), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 14), Range(0, 13))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 13, leading dimension = 8, direction = None, bbox = [0, 0, 8, 13]}, 'matrix_b': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 14, leading dimension = 8, direction = None, bbox = [0, 0, 8, 14]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 8
	num. columns = 13
	bounding box = [0, 0, 8, 13]
	addressing = pointer_based
	num. actual rows = 8
	num. actual cols = 13
	leading dimension = 8
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 13
	num. columns = 14
	bounding box = [0, 0, 13, 14]
	addressing = pointer_based
	num. actual rows = 13
	num. actual cols = 14
	leading dimension = 13
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 8
	num. columns = 14
	bounding box = [0, 0, 8, 14]
	addressing = pointer_based
	num. actual rows = 8
	num. actual cols = 14
	leading dimension = 8
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = C, num. rows = 8, num. columns = 13, leading dimension = 8, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 8, 13]}, DenseMatrix{name = X, num. rows = 8, num. columns = 14, leading dimension = 8, direction = DataFlowDirection.SINK, bbox = [0, 0, 8, 14]}, DenseMatrix{name = D, num. rows = 13, num. columns = 14, leading dimension = 13, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 13, 14]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 14), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 13), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 14), Range(0, 13))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 13, leading dimension = 8, direction = None, bbox = [0, 0, 8, 13]}, 'matrix_b': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 14, leading dimension = 8, direction = None, bbox = [0, 0, 8, 14]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 14), size=112, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(8, 13), bbox=BoundingBox(Range(0, 8), Range(0, 13)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(8, 13), size=104, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(13, 14), bbox=BoundingBox(Range(0, 13), Range(0, 14)), stride=(1, 13), align=<yateto.arch.Architecture object at 0x7f7658385d50>),	  eqspp=dense(shape=(13, 14), size=182, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 8), Range(0, 14), Range(0, 13))), 'matrix_a': DenseMatrix{name = None, num. rows = 8, num. columns = 13, leading dimension = 8, direction = None, bbox = [0, 0, 8, 13]}, 'matrix_b': DenseMatrix{name = None, num. rows = 13, num. columns = 14, leading dimension = 13, direction = None, bbox = [0, 0, 13, 14]}, 'matrix_c': DenseMatrix{name = None, num. rows = 8, num. columns = 14, leading dimension = 8, direction = None, bbox = [0, 0, 8, 14]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d8_13_d8_14_d13_14__alpha_1_0_beta_0_0_p_p_p__761dfa0
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>)
dense(shape=(112, 15), size=1680, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(112, 46), bbox=BoundingBox(Range(0, 112), Range(0, 46)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 46), size=5152, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 15), size=1680, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(15, 46), bbox=BoundingBox(Range(0, 15), Range(0, 46)), stride=(1, 15), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(15, 46), size=690, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=True,	  alignedC=True,	  mnk=(Range(0, 112), Range(0, 46), Range(0, 15))), 'matrix_a': DenseMatrix{name = None, num. rows = 112, num. columns = 15, leading dimension = 112, direction = None, bbox = [0, 0, 112, 15]}, 'matrix_b': DenseMatrix{name = None, num. rows = 15, num. columns = 46, leading dimension = 15, direction = None, bbox = [0, 0, 15, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 112, num. columns = 46, leading dimension = 112, direction = None, bbox = [0, 0, 112, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(112, 46), bbox=BoundingBox(Range(0, 112), Range(0, 46)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 46), size=5152, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 15), size=1680, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(15, 46), bbox=BoundingBox(Range(0, 15), Range(0, 46)), stride=(1, 15), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(15, 46), size=690, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=True,	  alignedC=True,	  mnk=(Range(0, 112), Range(0, 46), Range(0, 15))), 'matrix_a': DenseMatrix{name = None, num. rows = 112, num. columns = 15, leading dimension = 112, direction = None, bbox = [0, 0, 112, 15]}, 'matrix_b': DenseMatrix{name = None, num. rows = 15, num. columns = 46, leading dimension = 15, direction = None, bbox = [0, 0, 15, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 112, num. columns = 46, leading dimension = 112, direction = None, bbox = [0, 0, 112, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(112, 46), bbox=BoundingBox(Range(0, 112), Range(0, 46)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 46), size=5152, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 15), size=1680, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(15, 46), bbox=BoundingBox(Range(0, 15), Range(0, 46)), stride=(1, 15), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(15, 46), size=690, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=True,	  alignedC=True,	  mnk=(Range(0, 112), Range(0, 46), Range(0, 15))), 'matrix_a': DenseMatrix{name = None, num. rows = 112, num. columns = 15, leading dimension = 112, direction = None, bbox = [0, 0, 112, 15]}, 'matrix_b': DenseMatrix{name = None, num. rows = 15, num. columns = 46, leading dimension = 15, direction = None, bbox = [0, 0, 15, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 112, num. columns = 46, leading dimension = 112, direction = None, bbox = [0, 0, 112, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 112
	num. columns = 15
	bounding box = [0, 0, 112, 15]
	addressing = pointer_based
	num. actual rows = 112
	num. actual cols = 15
	leading dimension = 112
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 15
	num. columns = 46
	bounding box = [0, 0, 15, 46]
	addressing = pointer_based
	num. actual rows = 15
	num. actual cols = 46
	leading dimension = 15
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 112
	num. columns = 46
	bounding box = [0, 0, 112, 46]
	addressing = pointer_based
	num. actual rows = 112
	num. actual cols = 46
	leading dimension = 112
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = F, num. rows = 15, num. columns = 46, leading dimension = 15, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 15, 46]}, DenseMatrix{name = A, num. rows = 112, num. columns = 46, leading dimension = 112, direction = DataFlowDirection.SINK, bbox = [0, 0, 112, 46]}, DenseMatrix{name = E, num. rows = 112, num. columns = 15, leading dimension = 112, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 112, 15]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(112, 46), bbox=BoundingBox(Range(0, 112), Range(0, 46)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 46), size=5152, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 15), size=1680, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(15, 46), bbox=BoundingBox(Range(0, 15), Range(0, 46)), stride=(1, 15), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(15, 46), size=690, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=True,	  alignedC=True,	  mnk=(Range(0, 112), Range(0, 46), Range(0, 15))), 'matrix_a': DenseMatrix{name = None, num. rows = 112, num. columns = 15, leading dimension = 112, direction = None, bbox = [0, 0, 112, 15]}, 'matrix_b': DenseMatrix{name = None, num. rows = 15, num. columns = 46, leading dimension = 15, direction = None, bbox = [0, 0, 15, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 112, num. columns = 46, leading dimension = 112, direction = None, bbox = [0, 0, 112, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(112, 46), bbox=BoundingBox(Range(0, 112), Range(0, 46)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 46), size=5152, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(112, 15), bbox=BoundingBox(Range(0, 112), Range(0, 15)), stride=(1, 112), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(112, 15), size=1680, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(15, 46), bbox=BoundingBox(Range(0, 15), Range(0, 46)), stride=(1, 15), align=<yateto.arch.Architecture object at 0x7f76605f1050>),	  eqspp=dense(shape=(15, 46), size=690, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=True,	  alignedC=True,	  mnk=(Range(0, 112), Range(0, 46), Range(0, 15))), 'matrix_a': DenseMatrix{name = None, num. rows = 112, num. columns = 15, leading dimension = 112, direction = None, bbox = [0, 0, 112, 15]}, 'matrix_b': DenseMatrix{name = None, num. rows = 15, num. columns = 46, leading dimension = 15, direction = None, bbox = [0, 0, 15, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 112, num. columns = 46, leading dimension = 112, direction = None, bbox = [0, 0, 112, 46]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d15_46_d112_46_d112_15__alpha_1_0_beta_1_0_p_p_p__cbaa441
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(8, 14, 46), bbox=BoundingBox(Range(0, 8), Range(0, 14), Range(0, 46)), stride=(1, 8, 112), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(8, 14, 46), size=5152, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(46,), bbox=BoundingBox(Range(0, 46)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(46,), size=46, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(8, 14), size=112, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 46), 'p': Range(0, 14), 'k': Range(0, 8)}
)
i1:  [Range(0, 46)]
i2:  BoundingBox(Range(0, 46))
i1:  [Range(0, 8), Range(0, 14)]
i2:  BoundingBox(Range(0, 8), Range(0, 14))
i1:  [Range(0, 8), Range(0, 14), Range(0, 46)]
i2:  BoundingBox(Range(0, 8), Range(0, 14), Range(0, 46))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f76605fc550>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [46], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [8, 14], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [8, 14, 46], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = A, addressing = pointer_based, dimensions = [8, 14, 46], dataflow direction = DataFlowDirection.SINK}, Tensor: { name = B, addressing = pointer_based, dimensions = [46], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = X, addressing = pointer_based, dimensions = [8, 14], dataflow direction = DataFlowDirection.SOURCE}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: A, type: SymbolType.Batch, name: B, type: SymbolType.Batch, name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(8, 14, 46), bbox=BoundingBox(Range(0, 8), Range(0, 14), Range(0, 46)), stride=(1, 8, 112), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(8, 14, 46), size=5152, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(46,), bbox=BoundingBox(Range(0, 46)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(46,), size=46, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(8, 14), bbox=BoundingBox(Range(0, 8), Range(0, 14)), stride=(1, 8), align=<yateto.arch.Architecture object at 0x7f766c5d6790>), eqspp=dense(shape=(8, 14), size=112, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 46), 'p': Range(0, 14), 'k': Range(0, 8)}
)
0 1 k
1 8 p
2 112 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 8, 112, 5152]
[('rankOffset2', 8), ('rankOffset1', 1)]
[1, 8, 112, 5152]
[('rankOffset2', 8), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d8_14_46_d46_d8_14__alpha_1_0_p_p_p__55cfe00
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>)
dense(shape=(9, 26), size=234, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 46), size=414, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 26), size=234, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(26, 46), bbox=BoundingBox(Range(0, 26), Range(0, 46)), stride=(1, 26), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(26, 46), size=1196, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 46), Range(0, 26))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 26, leading dimension = 9, direction = None, bbox = [0, 0, 9, 26]}, 'matrix_b': DenseMatrix{name = None, num. rows = 26, num. columns = 46, leading dimension = 26, direction = None, bbox = [0, 0, 26, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 46, leading dimension = 9, direction = None, bbox = [0, 0, 9, 46]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 46), size=414, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 26), size=234, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(26, 46), bbox=BoundingBox(Range(0, 26), Range(0, 46)), stride=(1, 26), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(26, 46), size=1196, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 46), Range(0, 26))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 26, leading dimension = 9, direction = None, bbox = [0, 0, 9, 26]}, 'matrix_b': DenseMatrix{name = None, num. rows = 26, num. columns = 46, leading dimension = 26, direction = None, bbox = [0, 0, 26, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 46, leading dimension = 9, direction = None, bbox = [0, 0, 9, 46]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 46), size=414, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 26), size=234, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(26, 46), bbox=BoundingBox(Range(0, 26), Range(0, 46)), stride=(1, 26), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(26, 46), size=1196, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 46), Range(0, 26))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 26, leading dimension = 9, direction = None, bbox = [0, 0, 9, 26]}, 'matrix_b': DenseMatrix{name = None, num. rows = 26, num. columns = 46, leading dimension = 26, direction = None, bbox = [0, 0, 26, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 46, leading dimension = 9, direction = None, bbox = [0, 0, 9, 46]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = C
	num. rows = 9
	num. columns = 26
	bounding box = [0, 0, 9, 26]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 26
	leading dimension = 9
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = D
	num. rows = 26
	num. columns = 46
	bounding box = [0, 0, 26, 46]
	addressing = pointer_based
	num. actual rows = 26
	num. actual cols = 46
	leading dimension = 26
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = X
	num. rows = 9
	num. columns = 46
	bounding box = [0, 0, 9, 46]
	addressing = pointer_based
	num. actual rows = 9
	num. actual cols = 46
	leading dimension = 9
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = C, num. rows = 9, num. columns = 26, leading dimension = 9, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 9, 26]}, DenseMatrix{name = D, num. rows = 26, num. columns = 46, leading dimension = 26, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 26, 46]}, DenseMatrix{name = X, num. rows = 9, num. columns = 46, leading dimension = 9, direction = DataFlowDirection.SINK, bbox = [0, 0, 9, 46]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 46), size=414, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 26), size=234, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(26, 46), bbox=BoundingBox(Range(0, 26), Range(0, 46)), stride=(1, 26), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(26, 46), size=1196, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 46), Range(0, 26))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 26, leading dimension = 9, direction = None, bbox = [0, 0, 9, 26]}, 'matrix_b': DenseMatrix{name = None, num. rows = 26, num. columns = 46, leading dimension = 26, direction = None, bbox = [0, 0, 26, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 46, leading dimension = 9, direction = None, bbox = [0, 0, 9, 46]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=X,	  memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 46), size=414, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=C,	  memoryLayout=DenseMemoryLayout(shape=(9, 26), bbox=BoundingBox(Range(0, 9), Range(0, 26)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(9, 26), size=234, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=D,	  memoryLayout=DenseMemoryLayout(shape=(26, 46), bbox=BoundingBox(Range(0, 26), Range(0, 46)), stride=(1, 26), align=<yateto.arch.Architecture object at 0x7f76583868d0>),	  eqspp=dense(shape=(26, 46), size=1196, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=0.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 9), Range(0, 46), Range(0, 26))), 'matrix_a': DenseMatrix{name = None, num. rows = 9, num. columns = 26, leading dimension = 9, direction = None, bbox = [0, 0, 9, 26]}, 'matrix_b': DenseMatrix{name = None, num. rows = 26, num. columns = 46, leading dimension = 26, direction = None, bbox = [0, 0, 26, 46]}, 'matrix_c': DenseMatrix{name = None, num. rows = 9, num. columns = 46, leading dimension = 9, direction = None, bbox = [0, 0, 9, 46]}, 'args': ['C, extraOffset_C', 'D, extraOffset_D', 'X, extraOffset_X', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d9_26_d26_46_d9_46__alpha_1_0_beta_0_0_p_p_p__336f619
const float * const * C, int C_extraOffset, const float * const * D, int D_extraOffset, float ** X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>)
dense(shape=(414, 89), size=36846, ndim=2)
INNERLOOPBODY
APPEND:  ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(414, 17), bbox=BoundingBox(Range(0, 414), Range(0, 17)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 17), size=7038, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 89), size=36846, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(89, 17), bbox=BoundingBox(Range(0, 89), Range(0, 17)), stride=(1, 89), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(89, 17), size=1513, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 414), Range(0, 17), Range(0, 89))), 'matrix_a': DenseMatrix{name = None, num. rows = 414, num. columns = 89, leading dimension = 414, direction = None, bbox = [0, 0, 414, 89]}, 'matrix_b': DenseMatrix{name = None, num. rows = 89, num. columns = 17, leading dimension = 89, direction = None, bbox = [0, 0, 89, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 414, num. columns = 17, leading dimension = 414, direction = None, bbox = [0, 0, 414, 17]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(414, 17), bbox=BoundingBox(Range(0, 414), Range(0, 17)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 17), size=7038, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 89), size=36846, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(89, 17), bbox=BoundingBox(Range(0, 89), Range(0, 17)), stride=(1, 89), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(89, 17), size=1513, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 414), Range(0, 17), Range(0, 89))), 'matrix_a': DenseMatrix{name = None, num. rows = 414, num. columns = 89, leading dimension = 414, direction = None, bbox = [0, 0, 414, 89]}, 'matrix_b': DenseMatrix{name = None, num. rows = 89, num. columns = 17, leading dimension = 89, direction = None, bbox = [0, 0, 89, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 414, num. columns = 17, leading dimension = 414, direction = None, bbox = [0, 0, 414, 17]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
0 ('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(414, 17), bbox=BoundingBox(Range(0, 414), Range(0, 17)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 17), size=7038, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 89), size=36846, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(89, 17), bbox=BoundingBox(Range(0, 89), Range(0, 17)), stride=(1, 89), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(89, 17), size=1513, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 414), Range(0, 17), Range(0, 89))), 'matrix_a': DenseMatrix{name = None, num. rows = 414, num. columns = 89, leading dimension = 414, direction = None, bbox = [0, 0, 414, 89]}, 'matrix_b': DenseMatrix{name = None, num. rows = 89, num. columns = 17, leading dimension = 89, direction = None, bbox = [0, 0, 89, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 414, num. columns = 17, leading dimension = 414, direction = None, bbox = [0, 0, 414, 17]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Add:  DenseMatrix{name = E
	num. rows = 414
	num. columns = 89
	bounding box = [0, 0, 414, 89]
	addressing = pointer_based
	num. actual rows = 414
	num. actual cols = 89
	leading dimension = 414
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = F
	num. rows = 89
	num. columns = 17
	bounding box = [0, 0, 89, 17]
	addressing = pointer_based
	num. actual rows = 89
	num. actual cols = 17
	leading dimension = 89
	direction = DataFlowDirection.SOURCE
}
Add:  DenseMatrix{name = A
	num. rows = 414
	num. columns = 17
	bounding box = [0, 0, 414, 17]
	addressing = pointer_based
	num. actual rows = 414
	num. actual cols = 17
	leading dimension = 414
	direction = DataFlowDirection.SINK
}
{DenseMatrix{name = E, num. rows = 414, num. columns = 89, leading dimension = 414, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 414, 89]}, DenseMatrix{name = F, num. rows = 89, num. columns = 17, leading dimension = 89, direction = DataFlowDirection.SOURCE, bbox = [0, 0, 89, 17]}, DenseMatrix{name = A, num. rows = 414, num. columns = 17, leading dimension = 414, direction = DataFlowDirection.SINK, bbox = [0, 0, 414, 17]}}
[('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(414, 17), bbox=BoundingBox(Range(0, 414), Range(0, 17)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 17), size=7038, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 89), size=36846, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(89, 17), bbox=BoundingBox(Range(0, 89), Range(0, 17)), stride=(1, 89), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(89, 17), size=1513, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 414), Range(0, 17), Range(0, 89))), 'matrix_a': DenseMatrix{name = None, num. rows = 414, num. columns = 89, leading dimension = 414, direction = None, bbox = [0, 0, 414, 89]}, 'matrix_b': DenseMatrix{name = None, num. rows = 89, num. columns = 17, leading dimension = 89, direction = None, bbox = [0, 0, 89, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 414, num. columns = 17, leading dimension = 414, direction = None, bbox = [0, 0, 414, 17]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})]
('gemm', {'descr': Description(  result=TensorDescription(  name=A,	  memoryLayout=DenseMemoryLayout(shape=(414, 17), bbox=BoundingBox(Range(0, 414), Range(0, 17)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 17), size=7038, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  leftTerm=TensorDescription(  name=E,	  memoryLayout=DenseMemoryLayout(shape=(414, 89), bbox=BoundingBox(Range(0, 414), Range(0, 89)), stride=(1, 414), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(414, 89), size=36846, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  rightTerm=TensorDescription(  name=F,	  memoryLayout=DenseMemoryLayout(shape=(89, 17), bbox=BoundingBox(Range(0, 89), Range(0, 17)), stride=(1, 89), align=<yateto.arch.Architecture object at 0x7f76605d0a10>),	  eqspp=dense(shape=(89, 17), size=1513, ndim=2),	  is_compute_constant=False,	  is_temporary=False),	  transA=False,	  transB=False,	  alpha=1.0,	  beta=1.0,	  prefetchName=None,	  isACsc=False,	  isBCsc=False,	  alignedA=False,	  alignedC=False,	  mnk=(Range(0, 414), Range(0, 17), Range(0, 89))), 'matrix_a': DenseMatrix{name = None, num. rows = 414, num. columns = 89, leading dimension = 414, direction = None, bbox = [0, 0, 414, 89]}, 'matrix_b': DenseMatrix{name = None, num. rows = 89, num. columns = 17, leading dimension = 89, direction = None, bbox = [0, 0, 89, 17]}, 'matrix_c': DenseMatrix{name = None, num. rows = 414, num. columns = 17, leading dimension = 414, direction = None, bbox = [0, 0, 414, 17]}, 'args': ['E, extraOffset_E', 'F, extraOffset_F', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
Calling external code generators...
{}
Generating initialization code...
sloopOverGEMM_NT_NT_NT__d414_89_d89_17_d414_17__alpha_1_0_beta_1_0_p_p_p__c08d6f7
float ** A, int A_extraOffset, const float * const * E, int E_extraOffset, const float * const * F, int F_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
Deducing indices...
Generating unit tests...
Optimizing ASTs...
kernel
Generating kernels...
WARNING: Product operation is experimental and in early stages of development
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(9, 46, 17), bbox=BoundingBox(Range(0, 9), Range(0, 46), Range(0, 17)), stride=(1, 9, 414), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(9, 46, 17), size=7038, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(17,), bbox=BoundingBox(Range(0, 17)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(17,), size=17, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(9, 46), size=414, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 17), 'p': Range(0, 46), 'k': Range(0, 9)}
)
i1:  [Range(0, 17)]
i2:  BoundingBox(Range(0, 17))
i1:  [Range(0, 9), Range(0, 46)]
i2:  BoundingBox(Range(0, 9), Range(0, 46))
i1:  [Range(0, 9), Range(0, 46), Range(0, 17)]
i2:  BoundingBox(Range(0, 9), Range(0, 46), Range(0, 17))
0 ('product', {'descr': <yateto.codegen.product.factory.Description object at 0x7f7658395cd0>, 'tensor_a': Tensor: { name = None, addressing = pointer_based, dimensions = [17], dataflow direction = None}, 'tensor_b': Tensor: { name = None, addressing = pointer_based, dimensions = [9, 46], dataflow direction = None}, 'tensor_c': Tensor: { name = None, addressing = pointer_based, dimensions = [9, 46, 17], dataflow direction = None}, 'alpha': 1.0, 'args': ['B, extraOffset_B', 'X, extraOffset_X', 'A, extraOffset_A', 'numElements', 'flags', 'streamPtr']})
{Tensor: { name = B, addressing = pointer_based, dimensions = [17], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = X, addressing = pointer_based, dimensions = [9, 46], dataflow direction = DataFlowDirection.SOURCE}, Tensor: { name = A, addressing = pointer_based, dimensions = [9, 46, 17], dataflow direction = DataFlowDirection.SINK}}
WARNING: TODO: Update FLOPs
Calling external code generators...
name: B, type: SymbolType.Batch, name: X, type: SymbolType.Batch, name: A, type: SymbolType.Batch
name: B, type: SymbolType.Batch
name: X, type: SymbolType.Batch
name: A, type: SymbolType.Batch
WARNING: TODO: FIND A BETTER THREAD DISTRIBUTION FOR SUM OPERATOR
EX1 name: glb_B, type: SymbolType.Global, name: glb_X, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
name: glb_B, type: SymbolType.Global
EX2 
WARNING: TODO: A LOT OF STUFF HERE
Description(
	alpha: 1.0
	add: True
	result: IndexedTensorDescription(name=A, indices=kpm, memoryLayout=DenseMemoryLayout(shape=(9, 46, 17), bbox=BoundingBox(Range(0, 9), Range(0, 46), Range(0, 17)), stride=(1, 9, 414), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(9, 46, 17), size=7038, ndim=3), is_compute_constant=False, is_temporary=False)
	leftTerm: IndexedTensorDescription(name=B, indices=m, memoryLayout=DenseMemoryLayout(shape=(17,), bbox=BoundingBox(Range(0, 17)), stride=(1,), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(17,), size=17, ndim=1), is_compute_constant=False, is_temporary=False)
	rightTerm: IndexedTensorDescription(name=X, indices=kp, memoryLayout=DenseMemoryLayout(shape=(9, 46), bbox=BoundingBox(Range(0, 9), Range(0, 46)), stride=(1, 9), align=<yateto.arch.Architecture object at 0x7f766c583b50>), eqspp=dense(shape=(9, 46), size=414, ndim=2), is_compute_constant=False, is_temporary=False)
	isACsc: False
	isBCsc: False
	loopRanges: {'m': Range(0, 17), 'p': Range(0, 46), 'k': Range(0, 9)}
)
0 1 k
1 9 p
2 414 m
rankOffset2 =  0
rowsLeft =  7
rankOffset1 =  7
rowsLeft =  0
[1, 9, 414, 7038]
[('rankOffset2', 9), ('rankOffset1', 1)]
[1, 9, 414, 7038]
[('rankOffset2', 9), ('rankOffset1', 1)]
Generating initialization code...
sproduct_NT_NT_NT__d17_d9_46_d9_46_17__alpha_1_0_p_p_p__45deca8
float ** A, int A_extraOffset, const float * const * B, int B_extraOffset, const float * const * X, int X_extraOffset, unsigned numElements, unsigned* flags, void* streamPtr
